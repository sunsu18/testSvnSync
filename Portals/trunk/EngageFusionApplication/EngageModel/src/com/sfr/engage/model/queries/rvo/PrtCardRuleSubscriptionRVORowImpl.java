package com.sfr.engage.model.queries.rvo;


import com.sfr.engage.core.PartnerInfo;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Sep 15 12:24:58 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PrtCardRuleSubscriptionRVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        SubscrId {
            public Object get(PrtCardRuleSubscriptionRVORowImpl obj) {
                return obj.getSubscrId();
            }

            public void put(PrtCardRuleSubscriptionRVORowImpl obj, Object value) {
                obj.setSubscrId((Number)value);
            }
        }
        ,
        RuleId {
            public Object get(PrtCardRuleSubscriptionRVORowImpl obj) {
                return obj.getRuleId();
            }

            public void put(PrtCardRuleSubscriptionRVORowImpl obj, Object value) {
                obj.setRuleId((Number)value);
            }
        }
        ,
        PartnerId {
            public Object get(PrtCardRuleSubscriptionRVORowImpl obj) {
                return obj.getPartnerId();
            }

            public void put(PrtCardRuleSubscriptionRVORowImpl obj, Object value) {
                obj.setPartnerId((String)value);
            }
        }
        ,
        AccountId {
            public Object get(PrtCardRuleSubscriptionRVORowImpl obj) {
                return obj.getAccountId();
            }

            public void put(PrtCardRuleSubscriptionRVORowImpl obj, Object value) {
                obj.setAccountId((String)value);
            }
        }
        ,
        CardgroupMain {
            public Object get(PrtCardRuleSubscriptionRVORowImpl obj) {
                return obj.getCardgroupMain();
            }

            public void put(PrtCardRuleSubscriptionRVORowImpl obj, Object value) {
                obj.setCardgroupMain((String)value);
            }
        }
        ,
        CardgroupSeq {
            public Object get(PrtCardRuleSubscriptionRVORowImpl obj) {
                return obj.getCardgroupSeq();
            }

            public void put(PrtCardRuleSubscriptionRVORowImpl obj, Object value) {
                obj.setCardgroupSeq((String)value);
            }
        }
        ,
        CardgroupSub {
            public Object get(PrtCardRuleSubscriptionRVORowImpl obj) {
                return obj.getCardgroupSub();
            }

            public void put(PrtCardRuleSubscriptionRVORowImpl obj, Object value) {
                obj.setCardgroupSub((String)value);
            }
        }
        ,
        CardKsid {
            public Object get(PrtCardRuleSubscriptionRVORowImpl obj) {
                return obj.getCardKsid();
            }

            public void put(PrtCardRuleSubscriptionRVORowImpl obj, Object value) {
                obj.setCardKsid((String)value);
            }
        }
        ,
        SubscrDate {
            public Object get(PrtCardRuleSubscriptionRVORowImpl obj) {
                return obj.getSubscrDate();
            }

            public void put(PrtCardRuleSubscriptionRVORowImpl obj, Object value) {
                obj.setSubscrDate((Date)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(PrtCardRuleSubscriptionRVORowImpl object);

        public abstract void put(PrtCardRuleSubscriptionRVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int SUBSCRID = AttributesEnum.SubscrId.index();
    public static final int RULEID = AttributesEnum.RuleId.index();
    public static final int PARTNERID = AttributesEnum.PartnerId.index();
    public static final int ACCOUNTID = AttributesEnum.AccountId.index();
    public static final int CARDGROUPMAIN = AttributesEnum.CardgroupMain.index();
    public static final int CARDGROUPSEQ = AttributesEnum.CardgroupSeq.index();
    public static final int CARDGROUPSUB = AttributesEnum.CardgroupSub.index();
    public static final int CARDKSID = AttributesEnum.CardKsid.index();
    public static final int SUBSCRDATE = AttributesEnum.SubscrDate.index();
    HttpSession session;
    ExternalContext ectx;
    HttpServletRequest request;
    List<PartnerInfo> partnerInfoList;
    Map cardMap = new HashMap(); 

    /**
     * This is the default constructor (do not remove).
     */
    public PrtCardRuleSubscriptionRVORowImpl() {
        
        ectx = FacesContext.getCurrentInstance().getExternalContext();
        request = (HttpServletRequest)ectx.getRequest();
        session = request.getSession(false);
        partnerInfoList = new ArrayList<PartnerInfo>();
        
        if (session.getAttribute("Partner_Object_List") != null) {
            System.out.println("partnerlist not null");
            partnerInfoList = (List<PartnerInfo>)session.getAttribute("Partner_Object_List");
        }
        
        if (partnerInfoList != null && partnerInfoList.size() > 0) {
            for (int i = 0; i < partnerInfoList.size(); i++) {
                    for (int j = 0; j < partnerInfoList.get(i).getAccountList().size(); j++) {
                       
                        for (int k = 0; k < partnerInfoList.get(i).getAccountList().get(j).getCardGroup().size(); k++) {
                            
                            for (int cc = 0; cc < partnerInfoList.get(i).getAccountList().get(j).getCardGroup().get(k).getCard().size(); cc++)
                            {
                                if (partnerInfoList.get(i).getAccountList().get(j).getCardGroup().get(k).getCard().get(cc).getCardID() != null &&
                                    partnerInfoList.get(i).getAccountList().get(j).getCardGroup().get(k).getCard().get(cc).getExternalCardID() != null){
                                      
                                        cardMap.put(partnerInfoList.get(i).getAccountList().get(j).getCardGroup().get(k).getCard().get(cc).getCardID(), partnerInfoList.get(i).getAccountList().get(j).getCardGroup().get(k).getCard().get(cc).getExternalCardID());   
                                       
                                    }
                            }
                        }
                    }
                }
                cardMap.put("ALL", "All");
            }
            
        }
    

    /**
     * Gets the attribute value for the calculated attribute SubscrId.
     * @return the SubscrId
     */
    public Number getSubscrId() {
        return (Number) getAttributeInternal(SUBSCRID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SubscrId.
     * @param value value to set the  SubscrId
     */
    public void setSubscrId(Number value) {
        setAttributeInternal(SUBSCRID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute RuleId.
     * @return the RuleId
     */
    public Number getRuleId() {
        return (Number) getAttributeInternal(RULEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute RuleId.
     * @param value value to set the  RuleId
     */
    public void setRuleId(Number value) {
        setAttributeInternal(RULEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PartnerId.
     * @return the PartnerId
     */
    public String getPartnerId() {
        return (String) getAttributeInternal(PARTNERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PartnerId.
     * @param value value to set the  PartnerId
     */
    public void setPartnerId(String value) {
        setAttributeInternal(PARTNERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AccountId.
     * @return the AccountId
     */
    public String getAccountId() {
        return (String) getAttributeInternal(ACCOUNTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AccountId.
     * @param value value to set the  AccountId
     */
    public void setAccountId(String value) {
        setAttributeInternal(ACCOUNTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CardgroupMain.
     * @return the CardgroupMain
     */
    public String getCardgroupMain() {
        return (String) getAttributeInternal(CARDGROUPMAIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CardgroupMain.
     * @param value value to set the  CardgroupMain
     */
    public void setCardgroupMain(String value) {
        setAttributeInternal(CARDGROUPMAIN, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CardgroupSeq.
     * @return the CardgroupSeq
     */
    public String getCardgroupSeq() {
        return (String) getAttributeInternal(CARDGROUPSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CardgroupSeq.
     * @param value value to set the  CardgroupSeq
     */
    public void setCardgroupSeq(String value) {
        setAttributeInternal(CARDGROUPSEQ, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CardgroupSub.
     * @return the CardgroupSub
     */
    public String getCardgroupSub() {
        return (String) getAttributeInternal(CARDGROUPSUB);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CardgroupSub.
     * @param value value to set the  CardgroupSub
     */
    public void setCardgroupSub(String value) {
        setAttributeInternal(CARDGROUPSUB, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CardKsid.
     * @return the CardKsid
     */
    public String getCardKsid() {
        
        return (String)cardMap.get(getAttributeInternal(CARDKSID));
        
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CardKsid.
     * @param value value to set the  CardKsid
     */
    public void setCardKsid(String value) {
        setAttributeInternal(CARDKSID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute SubscrDate.
     * @return the SubscrDate
     */
    public Date getSubscrDate() {
        return (Date) getAttributeInternal(SUBSCRDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute SubscrDate.
     * @param value value to set the  SubscrDate
     */
    public void setSubscrDate(Date value) {
        setAttributeInternal(SUBSCRDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
