package com.sfr.engage.model.queries.rvo;

import com.sfr.engage.core.PartnerInfo;

import com.sfr.util.constants.Constants;
import com.sfr.util.validations.Conversion;

import java.text.NumberFormat;

import java.util.List;

import java.util.Locale;

import javax.faces.context.ExternalContext;

import javax.faces.context.FacesContext;

import javax.faces.model.SelectItem;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri May 23 10:04:46 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PrtCardTransactionOverviewRVORowImpl extends ViewRowImpl {
    
    private ExternalContext ectx=FacesContext.getCurrentInstance().getExternalContext();
    private HttpServletRequest request=(HttpServletRequest)ectx.getRequest();
    private HttpSession session=request.getSession(false);
    private List<PartnerInfo> partnerInfoList;
    private String lang;
    private Locale locale;
    private Conversion conversionUtility= new Conversion();
    
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        UrefTransactionId {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getUrefTransactionId();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setUrefTransactionId((String)value);
            }
        }
        ,
        PartnerId {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getPartnerId();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setPartnerId((String)value);
            }
        }
        ,
        PalsCountryCode {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getPalsCountryCode();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setPalsCountryCode((String)value);
            }
        }
        ,
        TransactionType {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getTransactionType();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setTransactionType((String)value);
            }
        }
        ,
        PurchaseCurrency {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getPurchaseCurrency();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setPurchaseCurrency((String)value);
            }
        }
        ,
        Ksid {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getKsid();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setKsid((String)value);
            }
        }
        ,
        PurchaseCountryCode {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getPurchaseCountryCode();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setPurchaseCountryCode((String)value);
            }
        }
        ,
        Card1Id {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getCard1Id();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setCard1Id((String)value);
            }
        }
        ,
        OdometerPortal {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getOdometerPortal();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setOdometerPortal((String)value);
            }
        }
        ,
        Odometer {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getOdometer();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setOdometer((String)value);
            }
        }
        ,
        CardId2Info {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getCardId2Info();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setCardId2Info((String)value);
            }
        }
        ,
        Card2Id {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getCard2Id();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setCard2Id((String)value);
            }
        }
        ,
        TransactionDt {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getTransactionDt();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setTransactionDt((Date)value);
            }
        }
        ,
        TransactionTime {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getTransactionTime();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setTransactionTime((Timestamp)value);
            }
        }
        ,
        StationName {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getStationName();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setStationName((String)value);
            }
        }
        ,
        InvoiceNumberNonCollective {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getInvoiceNumberNonCollective();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setInvoiceNumberNonCollective((String)value);
            }
        }
        ,
        ModifiedBy {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getModifiedBy();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setModifiedBy((String)value);
            }
        }
        ,
        PortalModifiedDate {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getPortalModifiedDate();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setPortalModifiedDate((Date)value);
            }
        }
        ,
        InvoiceNumberCollective {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getInvoiceNumberCollective();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setInvoiceNumberCollective((String)value);
            }
        }
        ,
        AccountId {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getAccountId();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setAccountId((String)value);
            }
        }
        ,
        CardgroupMainType {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getCardgroupMainType();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setCardgroupMainType((String)value);
            }
        }
        ,
        CardgroupSubType {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getCardgroupSubType();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setCardgroupSubType((String)value);
            }
        }
        ,
        CardgroupSeq {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getCardgroupSeq();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setCardgroupSeq((String)value);
            }
        }
        ,
        PreviousOdometer {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getPreviousOdometer();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setPreviousOdometer((String)value);
            }
        }
        ,
        ProductName {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getProductName();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setProductName((String)value);
            }
        }
        ,
        Quantity {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getQuantity();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setQuantity((Float)value);
            }
        }
        ,
        CurrencyUnitPrice {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getCurrencyUnitPrice();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setCurrencyUnitPrice((Float)value);
            }
        }
        ,
        InvoicedVat {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getInvoicedVat();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setInvoicedVat((Number)value);
            }
        }
        ,
        InvoicedNetAmount {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getInvoicedNetAmount();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setInvoicedNetAmount((Number)value);
            }
        }
        ,
        InvoiceDiscountAmount {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getInvoiceDiscountAmount();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setInvoiceDiscountAmount((Number)value);
            }
        }
        ,
        InvoicedUnitPrice {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getInvoicedUnitPrice();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setInvoicedUnitPrice((Number)value);
            }
        }
        ,
        InvoicedGrossAmount {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getInvoicedGrossAmount();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setInvoicedGrossAmount((Number)value);
            }
        }
        ,
        InvoicedNetAmountRebated {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getInvoicedNetAmountRebated();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setInvoicedNetAmountRebated((Float)value);
            }
        }
        ,
        InvoivedVatRebated {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getInvoivedVatRebated();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setInvoivedVatRebated((Float)value);
            }
        }
        ,
        InvoicedUnitPriceRebated {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getInvoicedUnitPriceRebated();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setInvoicedUnitPriceRebated((Float)value);
            }
        }
        ,
        CurrencyGrossAmountRebated {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getCurrencyGrossAmountRebated();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setCurrencyGrossAmountRebated((Float)value);
            }
        }
        ,
        CurrencyUnitPriceRebated {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getCurrencyUnitPriceRebated();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setCurrencyUnitPriceRebated((Float)value);
            }
        }
        ,
        CurrencyGrossAmount {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getCurrencyGrossAmount();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setCurrencyGrossAmount((Float)value);
            }
        }
        ,
        UnitOfMeasure {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getUnitOfMeasure();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setUnitOfMeasure((String)value);
            }
        }
        ,
        CurrencyVat {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getCurrencyVat();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setCurrencyVat((Float)value);
            }
        }
        ,
        CurrencyDiscountAmount {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getCurrencyDiscountAmount();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setCurrencyDiscountAmount((Float)value);
            }
        }
        ,
        CurrencyNetAmount {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getCurrencyNetAmount();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setCurrencyNetAmount((Float)value);
            }
        }
        ,
        InvoicedGrossAmountRebated {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getInvoicedGrossAmountRebated();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setInvoicedGrossAmountRebated((Float)value);
            }
        }
        ,
        DriverNumber {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getDriverNumber();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setDriverNumber((String)value);
            }
        }
        ,
        DriverName {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getDriverName();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setDriverName((String)value);
            }
        }
        ,
        VehicleNumber {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getVehicleNumber();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setVehicleNumber((String)value);
            }
        }
        ,
        InternalName {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getInternalName();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setInternalName((String)value);
            }
        }
        ,
        kmTotal {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getkmTotal();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setkmTotal((Float)value);
            }
        }
        ,
        kmPerLt {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getkmPerLt();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setkmPerLt((Float)value);
            }
        }
        ,
        ltPerHundred {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getltPerHundred();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setltPerHundred((Float)value);
            }
        }
        ,
        grandTotal {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getgrandTotal();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setgrandTotal((Float)value);
            }
        }
        ,
        CardGroupDesc {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getCardGroupDesc();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setCardGroupDesc((String)value);
            }
        }
        ,
        TotalAmount {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getTotalAmount();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setTotalAmount((String)value);
            }
        }
        ,
        InvoiceNo {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getInvoiceNo();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setInvoiceNo((String)value);
            }
        }
        ,
        CardTextLine2 {
            public Object get(PrtCardTransactionOverviewRVORowImpl obj) {
                return obj.getCardTextLine2();
            }

            public void put(PrtCardTransactionOverviewRVORowImpl obj,
                            Object value) {
                obj.setCardTextLine2((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(PrtCardTransactionOverviewRVORowImpl object);

        public abstract void put(PrtCardTransactionOverviewRVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int UREFTRANSACTIONID = AttributesEnum.UrefTransactionId.index();
    public static final int PARTNERID = AttributesEnum.PartnerId.index();
    public static final int PALSCOUNTRYCODE = AttributesEnum.PalsCountryCode.index();
    public static final int TRANSACTIONTYPE = AttributesEnum.TransactionType.index();
    public static final int PURCHASECURRENCY = AttributesEnum.PurchaseCurrency.index();
    public static final int KSID = AttributesEnum.Ksid.index();
    public static final int PURCHASECOUNTRYCODE = AttributesEnum.PurchaseCountryCode.index();
    public static final int CARD1ID = AttributesEnum.Card1Id.index();
    public static final int ODOMETERPORTAL = AttributesEnum.OdometerPortal.index();
    public static final int ODOMETER = AttributesEnum.Odometer.index();
    public static final int CARDID2INFO = AttributesEnum.CardId2Info.index();
    public static final int CARD2ID = AttributesEnum.Card2Id.index();
    public static final int TRANSACTIONDT = AttributesEnum.TransactionDt.index();
    public static final int TRANSACTIONTIME = AttributesEnum.TransactionTime.index();
    public static final int STATIONNAME = AttributesEnum.StationName.index();
    public static final int INVOICENUMBERNONCOLLECTIVE = AttributesEnum.InvoiceNumberNonCollective.index();
    public static final int MODIFIEDBY = AttributesEnum.ModifiedBy.index();
    public static final int PORTALMODIFIEDDATE = AttributesEnum.PortalModifiedDate.index();
    public static final int INVOICENUMBERCOLLECTIVE = AttributesEnum.InvoiceNumberCollective.index();
    public static final int ACCOUNTID = AttributesEnum.AccountId.index();
    public static final int CARDGROUPMAINTYPE = AttributesEnum.CardgroupMainType.index();
    public static final int CARDGROUPSUBTYPE = AttributesEnum.CardgroupSubType.index();
    public static final int CARDGROUPSEQ = AttributesEnum.CardgroupSeq.index();
    public static final int PREVIOUSODOMETER = AttributesEnum.PreviousOdometer.index();
    public static final int PRODUCTNAME = AttributesEnum.ProductName.index();
    public static final int QUANTITY = AttributesEnum.Quantity.index();
    public static final int CURRENCYUNITPRICE = AttributesEnum.CurrencyUnitPrice.index();
    public static final int INVOICEDVAT = AttributesEnum.InvoicedVat.index();
    public static final int INVOICEDNETAMOUNT = AttributesEnum.InvoicedNetAmount.index();
    public static final int INVOICEDISCOUNTAMOUNT = AttributesEnum.InvoiceDiscountAmount.index();
    public static final int INVOICEDUNITPRICE = AttributesEnum.InvoicedUnitPrice.index();
    public static final int INVOICEDGROSSAMOUNT = AttributesEnum.InvoicedGrossAmount.index();
    public static final int INVOICEDNETAMOUNTREBATED = AttributesEnum.InvoicedNetAmountRebated.index();
    public static final int INVOIVEDVATREBATED = AttributesEnum.InvoivedVatRebated.index();
    public static final int INVOICEDUNITPRICEREBATED = AttributesEnum.InvoicedUnitPriceRebated.index();
    public static final int CURRENCYGROSSAMOUNTREBATED = AttributesEnum.CurrencyGrossAmountRebated.index();
    public static final int CURRENCYUNITPRICEREBATED = AttributesEnum.CurrencyUnitPriceRebated.index();
    public static final int CURRENCYGROSSAMOUNT = AttributesEnum.CurrencyGrossAmount.index();
    public static final int UNITOFMEASURE = AttributesEnum.UnitOfMeasure.index();
    public static final int CURRENCYVAT = AttributesEnum.CurrencyVat.index();
    public static final int CURRENCYDISCOUNTAMOUNT = AttributesEnum.CurrencyDiscountAmount.index();
    public static final int CURRENCYNETAMOUNT = AttributesEnum.CurrencyNetAmount.index();
    public static final int INVOICEDGROSSAMOUNTREBATED = AttributesEnum.InvoicedGrossAmountRebated.index();
    public static final int DRIVERNUMBER = AttributesEnum.DriverNumber.index();
    public static final int DRIVERNAME = AttributesEnum.DriverName.index();
    public static final int VEHICLENUMBER = AttributesEnum.VehicleNumber.index();
    public static final int INTERNALNAME = AttributesEnum.InternalName.index();
    public static final int KMTOTAL = AttributesEnum.kmTotal.index();
    public static final int KMPERLT = AttributesEnum.kmPerLt.index();
    public static final int LTPERHUNDRED = AttributesEnum.ltPerHundred.index();
    public static final int GRANDTOTAL = AttributesEnum.grandTotal.index();
    public static final int CARDGROUPDESC = AttributesEnum.CardGroupDesc.index();
    public static final int TOTALAMOUNT = AttributesEnum.TotalAmount.index();
    public static final int INVOICENO = AttributesEnum.InvoiceNo.index();
    public static final int CARDTEXTLINE2 = AttributesEnum.CardTextLine2.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PrtCardTransactionOverviewRVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute UrefTransactionId.
     * @return the UrefTransactionId
     */
    public String getUrefTransactionId() {
        return (String) getAttributeInternal(UREFTRANSACTIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UrefTransactionId.
     * @param value value to set the  UrefTransactionId
     */
    public void setUrefTransactionId(String value) {
        setAttributeInternal(UREFTRANSACTIONID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PartnerId.
     * @return the PartnerId
     */
    public String getPartnerId() {
        return (String) getAttributeInternal(PARTNERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PartnerId.
     * @param value value to set the  PartnerId
     */
    public void setPartnerId(String value) {
        setAttributeInternal(PARTNERID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PalsCountryCode.
     * @return the PalsCountryCode
     */
    public String getPalsCountryCode() {
        return (String) getAttributeInternal(PALSCOUNTRYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PalsCountryCode.
     * @param value value to set the  PalsCountryCode
     */
    public void setPalsCountryCode(String value) {
        setAttributeInternal(PALSCOUNTRYCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransactionType.
     * @return the TransactionType
     */
    public String getTransactionType() {
        return (String) getAttributeInternal(TRANSACTIONTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransactionType.
     * @param value value to set the  TransactionType
     */
    public void setTransactionType(String value) {
        setAttributeInternal(TRANSACTIONTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PurchaseCurrency.
     * @return the PurchaseCurrency
     */
    public String getPurchaseCurrency() {
        return (String) getAttributeInternal(PURCHASECURRENCY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PurchaseCurrency.
     * @param value value to set the  PurchaseCurrency
     */
    public void setPurchaseCurrency(String value) {
        setAttributeInternal(PURCHASECURRENCY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Ksid.
     * @return the Ksid
     */
    public String getKsid() {
        return (String) getAttributeInternal(KSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Ksid.
     * @param value value to set the  Ksid
     */
    public void setKsid(String value) {
        setAttributeInternal(KSID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PurchaseCountryCode.
     * @return the PurchaseCountryCode
     */
    public String getPurchaseCountryCode() {
        return (String) getAttributeInternal(PURCHASECOUNTRYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PurchaseCountryCode.
     * @param value value to set the  PurchaseCountryCode
     */
    public void setPurchaseCountryCode(String value) {
        setAttributeInternal(PURCHASECOUNTRYCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Card1Id.
     * @return the Card1Id
     */
    public String getCard1Id() {
        return (String) getAttributeInternal(CARD1ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Card1Id.
     * @param value value to set the  Card1Id
     */
    public void setCard1Id(String value) {
        setAttributeInternal(CARD1ID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute OdometerPortal.
     * @return the OdometerPortal
     */
    public String getOdometerPortal() {
        return (String) getAttributeInternal(ODOMETERPORTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute OdometerPortal.
     * @param value value to set the  OdometerPortal
     */
    public void setOdometerPortal(String value) {
        setAttributeInternal(ODOMETERPORTAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Odometer.
     * @return the Odometer
     */
    public String getOdometer() {
        return (String) getAttributeInternal(ODOMETER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Odometer.
     * @param value value to set the  Odometer
     */
    public void setOdometer(String value) {
        setAttributeInternal(ODOMETER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CardId2Info.
     * @return the CardId2Info
     */
    public String getCardId2Info() {
        return (String) getAttributeInternal(CARDID2INFO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CardId2Info.
     * @param value value to set the  CardId2Info
     */
    public void setCardId2Info(String value) {
        setAttributeInternal(CARDID2INFO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Card2Id.
     * @return the Card2Id
     */
    public String getCard2Id() {
        return (String) getAttributeInternal(CARD2ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Card2Id.
     * @param value value to set the  Card2Id
     */
    public void setCard2Id(String value) {
        setAttributeInternal(CARD2ID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransactionDt.
     * @return the TransactionDt
     */
    public Date getTransactionDt() {
        return (Date) getAttributeInternal(TRANSACTIONDT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransactionDt.
     * @param value value to set the  TransactionDt
     */
    public void setTransactionDt(Date value) {
        setAttributeInternal(TRANSACTIONDT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransactionTime.
     * @return the TransactionTime
     */
    public Timestamp getTransactionTime() {
        return (Timestamp) getAttributeInternal(TRANSACTIONTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransactionTime.
     * @param value value to set the  TransactionTime
     */
    public void setTransactionTime(Timestamp value) {
        setAttributeInternal(TRANSACTIONTIME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute StationName.
     * @return the StationName
     */
    public String getStationName() {
        return (String) getAttributeInternal(STATIONNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute StationName.
     * @param value value to set the  StationName
     */
    public void setStationName(String value) {
        setAttributeInternal(STATIONNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InvoiceNumberNonCollective.
     * @return the InvoiceNumberNonCollective
     */
    public String getInvoiceNumberNonCollective() {
        return (String) getAttributeInternal(INVOICENUMBERNONCOLLECTIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InvoiceNumberNonCollective.
     * @param value value to set the  InvoiceNumberNonCollective
     */
    public void setInvoiceNumberNonCollective(String value) {
        setAttributeInternal(INVOICENUMBERNONCOLLECTIVE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ModifiedBy.
     * @return the ModifiedBy
     */
    public String getModifiedBy() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ModifiedBy.
     * @param value value to set the  ModifiedBy
     */
    public void setModifiedBy(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PortalModifiedDate.
     * @return the PortalModifiedDate
     */
    public Date getPortalModifiedDate() {
        return (Date) getAttributeInternal(PORTALMODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PortalModifiedDate.
     * @param value value to set the  PortalModifiedDate
     */
    public void setPortalModifiedDate(Date value) {
        setAttributeInternal(PORTALMODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InvoiceNumberCollective.
     * @return the InvoiceNumberCollective
     */
    public String getInvoiceNumberCollective() {
        return (String) getAttributeInternal(INVOICENUMBERCOLLECTIVE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InvoiceNumberCollective.
     * @param value value to set the  InvoiceNumberCollective
     */
    public void setInvoiceNumberCollective(String value) {
        setAttributeInternal(INVOICENUMBERCOLLECTIVE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AccountId.
     * @return the AccountId
     */
    public String getAccountId() {
        return (String) getAttributeInternal(ACCOUNTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AccountId.
     * @param value value to set the  AccountId
     */
    public void setAccountId(String value) {
        setAttributeInternal(ACCOUNTID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CardgroupMainType.
     * @return the CardgroupMainType
     */
    public String getCardgroupMainType() {
        return (String) getAttributeInternal(CARDGROUPMAINTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CardgroupMainType.
     * @param value value to set the  CardgroupMainType
     */
    public void setCardgroupMainType(String value) {
        setAttributeInternal(CARDGROUPMAINTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CardgroupSubType.
     * @return the CardgroupSubType
     */
    public String getCardgroupSubType() {
        return (String) getAttributeInternal(CARDGROUPSUBTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CardgroupSubType.
     * @param value value to set the  CardgroupSubType
     */
    public void setCardgroupSubType(String value) {
        setAttributeInternal(CARDGROUPSUBTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CardgroupSeq.
     * @return the CardgroupSeq
     */
    public String getCardgroupSeq() {
        return (String) getAttributeInternal(CARDGROUPSEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CardgroupSeq.
     * @param value value to set the  CardgroupSeq
     */
    public void setCardgroupSeq(String value) {
        setAttributeInternal(CARDGROUPSEQ, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PreviousOdometer.
     * @return the PreviousOdometer
     */
    public String getPreviousOdometer() {
        return (String) getAttributeInternal(PREVIOUSODOMETER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PreviousOdometer.
     * @param value value to set the  PreviousOdometer
     */
    public void setPreviousOdometer(String value) {
        setAttributeInternal(PREVIOUSODOMETER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ProductName.
     * @return the ProductName
     */
    public String getProductName() {
        return (String) getAttributeInternal(PRODUCTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ProductName.
     * @param value value to set the  ProductName
     */
    public void setProductName(String value) {
        setAttributeInternal(PRODUCTNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Quantity.
     * @return the Quantity
     */
    public Float getQuantity() {
        return (Float) getAttributeInternal(QUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Quantity.
     * @param value value to set the  Quantity
     */
    public void setQuantity(Float value) {
        setAttributeInternal(QUANTITY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrencyUnitPrice.
     * @return the CurrencyUnitPrice
     */
    public Float getCurrencyUnitPrice() {
        return (Float) getAttributeInternal(CURRENCYUNITPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrencyUnitPrice.
     * @param value value to set the  CurrencyUnitPrice
     */
    public void setCurrencyUnitPrice(Float value) {
        setAttributeInternal(CURRENCYUNITPRICE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InvoicedVat.
     * @return the InvoicedVat
     */
    public Number getInvoicedVat() {
        return (Number) getAttributeInternal(INVOICEDVAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InvoicedVat.
     * @param value value to set the  InvoicedVat
     */
    public void setInvoicedVat(Number value) {
        setAttributeInternal(INVOICEDVAT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InvoicedNetAmount.
     * @return the InvoicedNetAmount
     */
    public Number getInvoicedNetAmount() {
        return (Number) getAttributeInternal(INVOICEDNETAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InvoicedNetAmount.
     * @param value value to set the  InvoicedNetAmount
     */
    public void setInvoicedNetAmount(Number value) {
        setAttributeInternal(INVOICEDNETAMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InvoiceDiscountAmount.
     * @return the InvoiceDiscountAmount
     */
    public Number getInvoiceDiscountAmount() {
        return (Number) getAttributeInternal(INVOICEDISCOUNTAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InvoiceDiscountAmount.
     * @param value value to set the  InvoiceDiscountAmount
     */
    public void setInvoiceDiscountAmount(Number value) {
        setAttributeInternal(INVOICEDISCOUNTAMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InvoicedUnitPrice.
     * @return the InvoicedUnitPrice
     */
    public Number getInvoicedUnitPrice() {
        return (Number) getAttributeInternal(INVOICEDUNITPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InvoicedUnitPrice.
     * @param value value to set the  InvoicedUnitPrice
     */
    public void setInvoicedUnitPrice(Number value) {
        setAttributeInternal(INVOICEDUNITPRICE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InvoicedGrossAmount.
     * @return the InvoicedGrossAmount
     */
    public Number getInvoicedGrossAmount() {
        return (Number) getAttributeInternal(INVOICEDGROSSAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InvoicedGrossAmount.
     * @param value value to set the  InvoicedGrossAmount
     */
    public void setInvoicedGrossAmount(Number value) {
        setAttributeInternal(INVOICEDGROSSAMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InvoicedNetAmountRebated.
     * @return the InvoicedNetAmountRebated
     */
    public Float getInvoicedNetAmountRebated() {
        return (Float) getAttributeInternal(INVOICEDNETAMOUNTREBATED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InvoicedNetAmountRebated.
     * @param value value to set the  InvoicedNetAmountRebated
     */
    public void setInvoicedNetAmountRebated(Float value) {
        setAttributeInternal(INVOICEDNETAMOUNTREBATED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InvoivedVatRebated.
     * @return the InvoivedVatRebated
     */
    public Float getInvoivedVatRebated() {
        return (Float) getAttributeInternal(INVOIVEDVATREBATED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InvoivedVatRebated.
     * @param value value to set the  InvoivedVatRebated
     */
    public void setInvoivedVatRebated(Float value) {
        setAttributeInternal(INVOIVEDVATREBATED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InvoicedUnitPriceRebated.
     * @return the InvoicedUnitPriceRebated
     */
    public Float getInvoicedUnitPriceRebated() {
        return (Float) getAttributeInternal(INVOICEDUNITPRICEREBATED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InvoicedUnitPriceRebated.
     * @param value value to set the  InvoicedUnitPriceRebated
     */
    public void setInvoicedUnitPriceRebated(Float value) {
        setAttributeInternal(INVOICEDUNITPRICEREBATED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrencyGrossAmountRebated.
     * @return the CurrencyGrossAmountRebated
     */
    public Float getCurrencyGrossAmountRebated() {
        return (Float) getAttributeInternal(CURRENCYGROSSAMOUNTREBATED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrencyGrossAmountRebated.
     * @param value value to set the  CurrencyGrossAmountRebated
     */
    public void setCurrencyGrossAmountRebated(Float value) {
        setAttributeInternal(CURRENCYGROSSAMOUNTREBATED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrencyUnitPriceRebated.
     * @return the CurrencyUnitPriceRebated
     */
    public Float getCurrencyUnitPriceRebated() {
        return (Float) getAttributeInternal(CURRENCYUNITPRICEREBATED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrencyUnitPriceRebated.
     * @param value value to set the  CurrencyUnitPriceRebated
     */
    public void setCurrencyUnitPriceRebated(Float value) {
        setAttributeInternal(CURRENCYUNITPRICEREBATED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrencyGrossAmount.
     * @return the CurrencyGrossAmount
     */
    public Float getCurrencyGrossAmount() {
        return (Float) getAttributeInternal(CURRENCYGROSSAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrencyGrossAmount.
     * @param value value to set the  CurrencyGrossAmount
     */
    public void setCurrencyGrossAmount(Float value) {
        setAttributeInternal(CURRENCYGROSSAMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute UnitOfMeasure.
     * @return the UnitOfMeasure
     */
    public String getUnitOfMeasure() {
        return (String) getAttributeInternal(UNITOFMEASURE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute UnitOfMeasure.
     * @param value value to set the  UnitOfMeasure
     */
    public void setUnitOfMeasure(String value) {
        setAttributeInternal(UNITOFMEASURE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrencyVat.
     * @return the CurrencyVat
     */
    public Float getCurrencyVat() {
        return (Float) getAttributeInternal(CURRENCYVAT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrencyVat.
     * @param value value to set the  CurrencyVat
     */
    public void setCurrencyVat(Float value) {
        setAttributeInternal(CURRENCYVAT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrencyDiscountAmount.
     * @return the CurrencyDiscountAmount
     */
    public Float getCurrencyDiscountAmount() {
        return (Float) getAttributeInternal(CURRENCYDISCOUNTAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrencyDiscountAmount.
     * @param value value to set the  CurrencyDiscountAmount
     */
    public void setCurrencyDiscountAmount(Float value) {
        setAttributeInternal(CURRENCYDISCOUNTAMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CurrencyNetAmount.
     * @return the CurrencyNetAmount
     */
    public Float getCurrencyNetAmount() {
        return (Float) getAttributeInternal(CURRENCYNETAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CurrencyNetAmount.
     * @param value value to set the  CurrencyNetAmount
     */
    public void setCurrencyNetAmount(Float value) {
        setAttributeInternal(CURRENCYNETAMOUNT, value);
    }
    
    public String formatConversion(Float passedValue, Locale countryLocale) {
        String val = "";
        NumberFormat numberFormat = NumberFormat.getInstance(countryLocale);
        val = numberFormat.format(passedValue);
        return val;
    }

    /**
     * Gets the attribute value for the calculated attribute InvoicedGrossAmountRebated.
     * @return the InvoicedGrossAmountRebated
     */
    public Float getInvoicedGrossAmountRebated() {       
        return (Float) getAttributeInternal(INVOICEDGROSSAMOUNTREBATED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InvoicedGrossAmountRebated.
     * @param value value to set the  InvoicedGrossAmountRebated
     */
    public void setInvoicedGrossAmountRebated(Float value) {
        setAttributeInternal(INVOICEDGROSSAMOUNTREBATED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DriverNumber.
     * @return the DriverNumber
     */
    public String getDriverNumber() {
        return (String) getAttributeInternal(DRIVERNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DriverNumber.
     * @param value value to set the  DriverNumber
     */
    public void setDriverNumber(String value) {
        setAttributeInternal(DRIVERNUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DriverName.
     * @return the DriverName
     */
    public String getDriverName() {
        return (String) getAttributeInternal(DRIVERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DriverName.
     * @param value value to set the  DriverName
     */
    public void setDriverName(String value) {
        setAttributeInternal(DRIVERNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute VehicleNumber.
     * @return the VehicleNumber
     */
    public String getVehicleNumber() {
        return (String) getAttributeInternal(VEHICLENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute VehicleNumber.
     * @param value value to set the  VehicleNumber
     */
    public void setVehicleNumber(String value) {
        setAttributeInternal(VEHICLENUMBER, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InternalName.
     * @return the InternalName
     */
    public String getInternalName() {
        return (String) getAttributeInternal(INTERNALNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InternalName.
     * @param value value to set the  InternalName
     */
    public void setInternalName(String value) {
        setAttributeInternal(INTERNALNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute kmTotal.
     * @return the kmTotal
     */
    public Float getkmTotal() {
        Float val;
                       //Number actualValue;
                       Float temp1;
                       Float temp2;
                       if(getOdometerPortal() != null) {
                       
                       temp1=Float.parseFloat(getOdometerPortal());
                       temp2=Float.parseFloat(getPreviousOdometer());
                       val=temp1 - temp2;
                           if(val<0)
                           {                       
                            val=0.0f; 
                           }
                           
                       }else {
                           temp1=Float.parseFloat(getOdometer());
                           temp2=Float.parseFloat(getPreviousOdometer());
                           val=temp1 - temp2;
                               if(val<0)
                               {                       
                                val=0.0f; 
                               }                   
                       }
                               return val;
        //return (Float) getAttributeInternal(KMTOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute kmTotal.
     * @param value value to set the  kmTotal
     */
    public void setkmTotal(Float value) {
        setAttributeInternal(KMTOTAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute kmPerLt.
     * @return the kmPerLt
     */
    public Float getkmPerLt() {
                       Float val;               
                       Float actualValue1=getkmTotal();
                       Float actualValue2=getQuantity();                
                       val=(Float)actualValue1/actualValue2;                
                       return val;
        //return (Float) getAttributeInternal(KMPERLT);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute kmPerLt.
     * @param value value to set the  kmPerLt
     */
    public void setkmPerLt(Float value) {
        setAttributeInternal(KMPERLT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ltPerHundred.
     * @return the ltPerHundred
     */
    public Float getltPerHundred() {
                        float val;                
                        Float actualValue1=getkmPerLt();
                        if(actualValue1>0)
                        {
                        val=(float)1/actualValue1;                        
                        val=val*100;
                        }else {
                            val=0.0f; 
                        }
                        return val;
        //return (Float) getAttributeInternal(LTPERHUNDRED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ltPerHundred.
     * @param value value to set the  ltPerHundred
     */
    public void setltPerHundred(Float value) {
        setAttributeInternal(LTPERHUNDRED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute grandTotal.
     * @return the grandTotal
     */
    public Float getgrandTotal() {
        return (Float) getAttributeInternal(GRANDTOTAL);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute grandTotal.
     * @param value value to set the  grandTotal
     */
    public void setgrandTotal(Float value) {
        setAttributeInternal(GRANDTOTAL, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CardGroupDesc.
     * @return the CardGroupDesc
     */
    public String getCardGroupDesc() {
        String cardGroupDesc="";
        if(session!=null) {
            if (session.getAttribute("Partner_Object_List") != null) {
                partnerInfoList =
                        (List<PartnerInfo>)session.getAttribute("Partner_Object_List");
                String partnerId=getPartnerId();
                String cardGroupId=getCardgroupMainType().toString().trim()+getCardgroupSubType().toString().trim()+getCardgroupSeq().toString().trim();
                if (partnerInfoList != null) {
                    for (int k = 0; k < partnerInfoList.size(); k++) {
                        if (partnerId.equalsIgnoreCase(partnerInfoList.get(k).getPartnerValue().toString())) {                           
                                for (int ac = 0;ac < partnerInfoList.get(k).getAccountList().size();ac++) {                                    
                                        for (int cg = 0;cg < partnerInfoList.get(k).getAccountList().get(ac).getCardGroup().size();cg++) {
                                            if(cardGroupId.equalsIgnoreCase(partnerInfoList.get(k).getAccountList().get(ac).getCardGroup().get(cg).getCardGroupID())) {
                                               cardGroupDesc=  partnerInfoList.get(k).getAccountList().get(ac).getCardGroup().get(cg).getCardGroupName().toString();                                              
                                            }                                         
                                            
                                        }                                                          

                            }
                        }

                    }
                }
            }
        }
        return cardGroupDesc;
        //return (String) getAttributeInternal(CARDGROUPDESC);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CardGroupDesc.
     * @param value value to set the  CardGroupDesc
     */
    public void setCardGroupDesc(String value) {
        setAttributeInternal(CARDGROUPDESC, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotalAmount.
     * @return the TotalAmount
     */
    public String getTotalAmount() {  
        String val="";
        Float f=(Float)getInvoicedGrossAmountRebated();
        if (session != null) {
            lang = (String)session.getAttribute(Constants.userLang);
            if(lang!=null) {                      
                    locale = conversionUtility.getLocaleFromCountryCode(lang);                
            }else {
                locale = conversionUtility.getLocaleFromCountryCode("SE");                
            }
            if(locale!=null) {               
               val=formatConversion(f,locale);
            }
        }
        //return (String) getAttributeInternal(TOTALAMOUNT);
        return val;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TotalAmount.
     * @param value value to set the  TotalAmount
     */
    public void setTotalAmount(String value) {
        setAttributeInternal(TOTALAMOUNT, value);
    }

    /**
     * Gets the attribute value for the calculated attribute InvoiceNo.
     * @return the InvoiceNo
     */
    public String getInvoiceNo() {
        String result="";
        if(getInvoiceNumberCollective()!=null) {
            result=getInvoiceNumberCollective().toString().trim();
        }else {
            if(getInvoiceNumberNonCollective()!=null) {
                result=getInvoiceNumberNonCollective().toString().trim();
            }
        }
        return result;
        //return (String) getAttributeInternal(INVOICENO);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute InvoiceNo.
     * @param value value to set the  InvoiceNo
     */
    public void setInvoiceNo(String value) {
        setAttributeInternal(INVOICENO, value);
    }

    /**
     * Gets the attribute value for the calculated attribute CardTextLine2.
     * @return the CardTextLine2
     */
    public String getCardTextLine2() {
        String cardTextLine="";
        if(session!=null) {
            if (session.getAttribute("Partner_Object_List") != null) {
                partnerInfoList =
                        (List<PartnerInfo>)session.getAttribute("Partner_Object_List");
                String partnerId=getPartnerId();
                String cardId=getKsid().toString().trim();
                if (partnerInfoList != null) {
                    for (int k = 0; k < partnerInfoList.size(); k++) {
                        if (partnerId.equalsIgnoreCase(partnerInfoList.get(k).getPartnerValue().toString())) {                           
                                for (int ac = 0;ac < partnerInfoList.get(k).getAccountList().size();ac++) {                                    
                                        for (int cg = 0;cg < partnerInfoList.get(k).getAccountList().get(ac).getCardGroup().size();cg++) {
                                            for (int cd = 0;cd < partnerInfoList.get(k).getAccountList().get(ac).getCardGroup().get(cg).getCard().size();cd++) {
                                            if(cardId.equalsIgnoreCase(partnerInfoList.get(k).getAccountList().get(ac).getCardGroup().get(cg).getCard().get(cd).getCardID())) {                                                
                                                if(partnerInfoList.get(k).getAccountList().get(ac).getCardGroup().get(cg).getCard().get(cd).getCardTextline2() != null)
                                                {
                                               cardTextLine=  partnerInfoList.get(k).getAccountList().get(ac).getCardGroup().get(cg).getCard().get(cd).getCardTextline2().toString();                                              
                                                }
                                            }    
                                          }                                            
                                        }                                                          

                            }
                        }

                    }
                }
            }
        }
        return cardTextLine;
        //return (String) getAttributeInternal(CARDTEXTLINE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute CardTextLine2.
     * @param value value to set the  CardTextLine2
     */
    public void setCardTextLine2(String value) {
        setAttributeInternal(CARDTEXTLINE2, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
