package com.sfr.engage.model.entities;


import java.text.SimpleDateFormat;

import java.util.GregorianCalendar;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Mar 10 22:32:59 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PrtTruckInformationEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;
        private Timestamp sysDate;

    public void setSysDate(Timestamp sysDate) {
        this.sysDate = sysDate;
    }

    public Timestamp getSysDate() {
        java.util.Date currDate=GregorianCalendar.getInstance().getTime();        
        Timestamp timeStamp=new Timestamp(currDate);
        this.setSysDate(timeStamp);
        return sysDate;
    }


    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        PrtTruckInformationPk {
            public Object get(PrtTruckInformationEOImpl obj) {
                return obj.getPrtTruckInformationPk();
            }

            public void put(PrtTruckInformationEOImpl obj, Object value) {
                obj.setPrtTruckInformationPk((DBSequence)value);
            }
        }
        ,
        AccountNumber {
            public Object get(PrtTruckInformationEOImpl obj) {
                return obj.getAccountNumber();
            }

            public void put(PrtTruckInformationEOImpl obj, Object value) {
                obj.setAccountNumber((String)value);
            }
        }
        ,
        CardNumber {
            public Object get(PrtTruckInformationEOImpl obj) {
                return obj.getCardNumber();
            }

            public void put(PrtTruckInformationEOImpl obj, Object value) {
                obj.setCardNumber((String)value);
            }
        }
        ,
        VehicleNumber {
            public Object get(PrtTruckInformationEOImpl obj) {
                return obj.getVehicleNumber();
            }

            public void put(PrtTruckInformationEOImpl obj, Object value) {
                obj.setVehicleNumber((String)value);
            }
        }
        ,
        InternalName {
            public Object get(PrtTruckInformationEOImpl obj) {
                return obj.getInternalName();
            }

            public void put(PrtTruckInformationEOImpl obj, Object value) {
                obj.setInternalName((String)value);
            }
        }
        ,
        RegistrationNumber {
            public Object get(PrtTruckInformationEOImpl obj) {
                return obj.getRegistrationNumber();
            }

            public void put(PrtTruckInformationEOImpl obj, Object value) {
                obj.setRegistrationNumber((String)value);
            }
        }
        ,
        Brand {
            public Object get(PrtTruckInformationEOImpl obj) {
                return obj.getBrand();
            }

            public void put(PrtTruckInformationEOImpl obj, Object value) {
                obj.setBrand((String)value);
            }
        }
        ,
        Year {
            public Object get(PrtTruckInformationEOImpl obj) {
                return obj.getYear();
            }

            public void put(PrtTruckInformationEOImpl obj, Object value) {
                obj.setYear((Number)value);
            }
        }
        ,
        RegistrationDate {
            public Object get(PrtTruckInformationEOImpl obj) {
                return obj.getRegistrationDate();
            }

            public void put(PrtTruckInformationEOImpl obj, Object value) {
                obj.setRegistrationDate((Date)value);
            }
        }
        ,
        EndDate {
            public Object get(PrtTruckInformationEOImpl obj) {
                return obj.getEndDate();
            }

            public void put(PrtTruckInformationEOImpl obj, Object value) {
                obj.setEndDate((Date)value);
            }
        }
        ,
        FuelType {
            public Object get(PrtTruckInformationEOImpl obj) {
                return obj.getFuelType();
            }

            public void put(PrtTruckInformationEOImpl obj, Object value) {
                obj.setFuelType((String)value);
            }
        }
        ,
        MaxFuel {
            public Object get(PrtTruckInformationEOImpl obj) {
                return obj.getMaxFuel();
            }

            public void put(PrtTruckInformationEOImpl obj, Object value) {
                obj.setMaxFuel((Number)value);
            }
        }
        ,
        Odometer {
            public Object get(PrtTruckInformationEOImpl obj) {
                return obj.getOdometer();
            }

            public void put(PrtTruckInformationEOImpl obj, Object value) {
                obj.setOdometer((Number)value);
            }
        }
        ,
        Remarks {
            public Object get(PrtTruckInformationEOImpl obj) {
                return obj.getRemarks();
            }

            public void put(PrtTruckInformationEOImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        ModifiedBy {
            public Object get(PrtTruckInformationEOImpl obj) {
                return obj.getModifiedBy();
            }

            public void put(PrtTruckInformationEOImpl obj, Object value) {
                obj.setModifiedBy((String)value);
            }
        }
        ,
        ModifiedDate {
            public Object get(PrtTruckInformationEOImpl obj) {
                return obj.getModifiedDate();
            }

            public void put(PrtTruckInformationEOImpl obj, Object value) {
                obj.setModifiedDate((Timestamp)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(PrtTruckInformationEOImpl object);

        public abstract void put(PrtTruckInformationEOImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PRTTRUCKINFORMATIONPK = AttributesEnum.PrtTruckInformationPk.index();
    public static final int ACCOUNTNUMBER = AttributesEnum.AccountNumber.index();
    public static final int CARDNUMBER = AttributesEnum.CardNumber.index();
    public static final int VEHICLENUMBER = AttributesEnum.VehicleNumber.index();
    public static final int INTERNALNAME = AttributesEnum.InternalName.index();
    public static final int REGISTRATIONNUMBER = AttributesEnum.RegistrationNumber.index();
    public static final int BRAND = AttributesEnum.Brand.index();
    public static final int YEAR = AttributesEnum.Year.index();
    public static final int REGISTRATIONDATE = AttributesEnum.RegistrationDate.index();
    public static final int ENDDATE = AttributesEnum.EndDate.index();
    public static final int FUELTYPE = AttributesEnum.FuelType.index();
    public static final int MAXFUEL = AttributesEnum.MaxFuel.index();
    public static final int ODOMETER = AttributesEnum.Odometer.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int MODIFIEDBY = AttributesEnum.ModifiedBy.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PrtTruckInformationEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.sfr.engage.model.entities.PrtTruckInformationEO");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for PrtTruckInformationPk, using the alias name PrtTruckInformationPk.
     * @return the PrtTruckInformationPk
     */
    public DBSequence getPrtTruckInformationPk() {
        return (DBSequence)getAttributeInternal(PRTTRUCKINFORMATIONPK);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrtTruckInformationPk.
     * @param value value to set the PrtTruckInformationPk
     */
    public void setPrtTruckInformationPk(DBSequence value) {
        setAttributeInternal(PRTTRUCKINFORMATIONPK, value);
    }

    /**
     * Gets the attribute value for AccountNumber, using the alias name AccountNumber.
     * @return the AccountNumber
     */
    public String getAccountNumber() {
        return (String)getAttributeInternal(ACCOUNTNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for AccountNumber.
     * @param value value to set the AccountNumber
     */
    public void setAccountNumber(String value) {
        setAttributeInternal(ACCOUNTNUMBER, value);
    }

    /**
     * Gets the attribute value for CardNumber, using the alias name CardNumber.
     * @return the CardNumber
     */
    public String getCardNumber() {
        return (String)getAttributeInternal(CARDNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for CardNumber.
     * @param value value to set the CardNumber
     */
    public void setCardNumber(String value) {
        setAttributeInternal(CARDNUMBER, value);
    }

    /**
     * Gets the attribute value for VehicleNumber, using the alias name VehicleNumber.
     * @return the VehicleNumber
     */
    public String getVehicleNumber() {
        return (String)getAttributeInternal(VEHICLENUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for VehicleNumber.
     * @param value value to set the VehicleNumber
     */
    public void setVehicleNumber(String value) {
        setAttributeInternal(VEHICLENUMBER, value);
    }

    /**
     * Gets the attribute value for InternalName, using the alias name InternalName.
     * @return the InternalName
     */
    public String getInternalName() {
        return (String)getAttributeInternal(INTERNALNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for InternalName.
     * @param value value to set the InternalName
     */
    public void setInternalName(String value) {
        setAttributeInternal(INTERNALNAME, value);
    }

    /**
     * Gets the attribute value for RegistrationNumber, using the alias name RegistrationNumber.
     * @return the RegistrationNumber
     */
    public String getRegistrationNumber() {
        return (String)getAttributeInternal(REGISTRATIONNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for RegistrationNumber.
     * @param value value to set the RegistrationNumber
     */
    public void setRegistrationNumber(String value) {
        setAttributeInternal(REGISTRATIONNUMBER, value);
    }

    /**
     * Gets the attribute value for Brand, using the alias name Brand.
     * @return the Brand
     */
    public String getBrand() {
        return (String)getAttributeInternal(BRAND);
    }

    /**
     * Sets <code>value</code> as the attribute value for Brand.
     * @param value value to set the Brand
     */
    public void setBrand(String value) {
        setAttributeInternal(BRAND, value);
    }

    /**
     * Gets the attribute value for Year, using the alias name Year.
     * @return the Year
     */
    public Number getYear() {
        return (Number)getAttributeInternal(YEAR);
    }

    /**
     * Sets <code>value</code> as the attribute value for Year.
     * @param value value to set the Year
     */
    public void setYear(Number value) {
        setAttributeInternal(YEAR, value);
    }

    /**
     * Gets the attribute value for RegistrationDate, using the alias name RegistrationDate.
     * @return the RegistrationDate
     */
    public Date getRegistrationDate() {
        return (Date)getAttributeInternal(REGISTRATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RegistrationDate.
     * @param value value to set the RegistrationDate
     */
    public void setRegistrationDate(Date value) {
        setAttributeInternal(REGISTRATIONDATE, value);
    }

    /**
     * Gets the attribute value for EndDate, using the alias name EndDate.
     * @return the EndDate
     */
    public Date getEndDate() {
        return (Date)getAttributeInternal(ENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndDate.
     * @param value value to set the EndDate
     */
    public void setEndDate(Date value) {
        setAttributeInternal(ENDDATE, value);
    }

    /**
     * Gets the attribute value for FuelType, using the alias name FuelType.
     * @return the FuelType
     */
    public String getFuelType() {
        return (String)getAttributeInternal(FUELTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FuelType.
     * @param value value to set the FuelType
     */
    public void setFuelType(String value) {
        setAttributeInternal(FUELTYPE, value);
    }

    /**
     * Gets the attribute value for MaxFuel, using the alias name MaxFuel.
     * @return the MaxFuel
     */
    public Number getMaxFuel() {
        return (Number)getAttributeInternal(MAXFUEL);
    }

    /**
     * Sets <code>value</code> as the attribute value for MaxFuel.
     * @param value value to set the MaxFuel
     */
    public void setMaxFuel(Number value) {
        setAttributeInternal(MAXFUEL, value);
    }

    /**
     * Gets the attribute value for Odometer, using the alias name Odometer.
     * @return the Odometer
     */
    public Number getOdometer() {
        return (Number)getAttributeInternal(ODOMETER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Odometer.
     * @param value value to set the Odometer
     */
    public void setOdometer(Number value) {
        setAttributeInternal(ODOMETER, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for ModifiedBy, using the alias name ModifiedBy.
     * @return the ModifiedBy
     */
    public String getModifiedBy() {
        return (String)getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedBy.
     * @param value value to set the ModifiedBy
     */
    public void setModifiedBy(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
     * @return the ModifiedDate
     */
    public Timestamp getModifiedDate() {
        return (Timestamp)getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedDate.
     * @param value value to set the ModifiedDate
     */
    public void setModifiedDate(Timestamp value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param prtTruckInformationPk key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence prtTruckInformationPk) {
        return new Key(new Object[]{prtTruckInformationPk});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        System.out.println("Entering");
        switch(operation){
        case DML_INSERT:
            {
                System.out.println("Comming");
                setModifiedDate(getSysDate());
               setModifiedBy("PurnaChandraRao");
                break;
            }
        case DML_UPDATE:
            {
                break;
            }
        }
        super.doDML(operation,e);        
    }
}
