package com.sfr.engage.model.queries.uvo;

import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Oct 21 14:37:19 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PrtCardUserInformationVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        CountryCode {
            public Object get(PrtCardUserInformationVORowImpl obj) {
                return obj.getCountryCode();
            }

            public void put(PrtCardUserInformationVORowImpl obj, Object value) {
                obj.setCountryCode((String)value);
            }
        }
        ,
        UserEmail {
            public Object get(PrtCardUserInformationVORowImpl obj) {
                return obj.getUserEmail();
            }

            public void put(PrtCardUserInformationVORowImpl obj, Object value) {
                obj.setUserEmail((String)value);
            }
        }
        ,
        UserFirstName {
            public Object get(PrtCardUserInformationVORowImpl obj) {
                return obj.getUserFirstName();
            }

            public void put(PrtCardUserInformationVORowImpl obj, Object value) {
                obj.setUserFirstName((String)value);
            }
        }
        ,
        UserMiddleName {
            public Object get(PrtCardUserInformationVORowImpl obj) {
                return obj.getUserMiddleName();
            }

            public void put(PrtCardUserInformationVORowImpl obj, Object value) {
                obj.setUserMiddleName((String)value);
            }
        }
        ,
        UserLastName {
            public Object get(PrtCardUserInformationVORowImpl obj) {
                return obj.getUserLastName();
            }

            public void put(PrtCardUserInformationVORowImpl obj, Object value) {
                obj.setUserLastName((String)value);
            }
        }
        ,
        UserDob {
            public Object get(PrtCardUserInformationVORowImpl obj) {
                return obj.getUserDob();
            }

            public void put(PrtCardUserInformationVORowImpl obj, Object value) {
                obj.setUserDob((Date)value);
            }
        }
        ,
        UserPhoneNo {
            public Object get(PrtCardUserInformationVORowImpl obj) {
                return obj.getUserPhoneNo();
            }

            public void put(PrtCardUserInformationVORowImpl obj, Object value) {
                obj.setUserPhoneNo((String)value);
            }
        }
        ,
        UserLang {
            public Object get(PrtCardUserInformationVORowImpl obj) {
                return obj.getUserLang();
            }

            public void put(PrtCardUserInformationVORowImpl obj, Object value) {
                obj.setUserLang((String)value);
            }
        }
        ,
        ModifiedBy {
            public Object get(PrtCardUserInformationVORowImpl obj) {
                return obj.getModifiedBy();
            }

            public void put(PrtCardUserInformationVORowImpl obj, Object value) {
                obj.setModifiedBy((String)value);
            }
        }
        ,
        ModifiedDate {
            public Object get(PrtCardUserInformationVORowImpl obj) {
                return obj.getModifiedDate();
            }

            public void put(PrtCardUserInformationVORowImpl obj, Object value) {
                obj.setModifiedDate((Timestamp)value);
            }
        }
        ,
        UserShortname {
            public Object get(PrtCardUserInformationVORowImpl obj) {
                return obj.getUserShortname();
            }

            public void put(PrtCardUserInformationVORowImpl obj, Object value) {
                obj.setUserShortname((String)value);
            }
        }
        ,
        UserStatus {
            public Object get(PrtCardUserInformationVORowImpl obj) {
                return obj.getUserStatus();
            }

            public void put(PrtCardUserInformationVORowImpl obj, Object value) {
                obj.setUserStatus((String)value);
            }
        }
        ,
        PrtCardUserRoleMappingVO {
            public Object get(PrtCardUserInformationVORowImpl obj) {
                return obj.getPrtCardUserRoleMappingVO();
            }

            public void put(PrtCardUserInformationVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(PrtCardUserInformationVORowImpl object);

        public abstract void put(PrtCardUserInformationVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int COUNTRYCODE = AttributesEnum.CountryCode.index();
    public static final int USEREMAIL = AttributesEnum.UserEmail.index();
    public static final int USERFIRSTNAME = AttributesEnum.UserFirstName.index();
    public static final int USERMIDDLENAME = AttributesEnum.UserMiddleName.index();
    public static final int USERLASTNAME = AttributesEnum.UserLastName.index();
    public static final int USERDOB = AttributesEnum.UserDob.index();
    public static final int USERPHONENO = AttributesEnum.UserPhoneNo.index();
    public static final int USERLANG = AttributesEnum.UserLang.index();
    public static final int MODIFIEDBY = AttributesEnum.ModifiedBy.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();
    public static final int USERSHORTNAME = AttributesEnum.UserShortname.index();
    public static final int USERSTATUS = AttributesEnum.UserStatus.index();
    public static final int PRTCARDUSERROLEMAPPINGVO = AttributesEnum.PrtCardUserRoleMappingVO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PrtCardUserInformationVORowImpl() {
    }

    /**
     * Gets PrtCardUserInformationEO entity object.
     * @return the PrtCardUserInformationEO
     */
    public EntityImpl getPrtCardUserInformationEO() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for COUNTRY_CODE using the alias name CountryCode.
     * @return the COUNTRY_CODE
     */
    public String getCountryCode() {
        return (String) getAttributeInternal(COUNTRYCODE);
    }

    /**
     * Sets <code>value</code> as attribute value for COUNTRY_CODE using the alias name CountryCode.
     * @param value value to set the COUNTRY_CODE
     */
    public void setCountryCode(String value) {
        setAttributeInternal(COUNTRYCODE, value);
    }

    /**
     * Gets the attribute value for USER_EMAIL using the alias name UserEmail.
     * @return the USER_EMAIL
     */
    public String getUserEmail() {
        return (String) getAttributeInternal(USEREMAIL);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_EMAIL using the alias name UserEmail.
     * @param value value to set the USER_EMAIL
     */
    public void setUserEmail(String value) {
        setAttributeInternal(USEREMAIL, value);
    }

    /**
     * Gets the attribute value for USER_FIRST_NAME using the alias name UserFirstName.
     * @return the USER_FIRST_NAME
     */
    public String getUserFirstName() {
        return (String) getAttributeInternal(USERFIRSTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_FIRST_NAME using the alias name UserFirstName.
     * @param value value to set the USER_FIRST_NAME
     */
    public void setUserFirstName(String value) {
        setAttributeInternal(USERFIRSTNAME, value);
    }

    /**
     * Gets the attribute value for USER_MIDDLE_NAME using the alias name UserMiddleName.
     * @return the USER_MIDDLE_NAME
     */
    public String getUserMiddleName() {
        return (String) getAttributeInternal(USERMIDDLENAME);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_MIDDLE_NAME using the alias name UserMiddleName.
     * @param value value to set the USER_MIDDLE_NAME
     */
    public void setUserMiddleName(String value) {
        setAttributeInternal(USERMIDDLENAME, value);
    }

    /**
     * Gets the attribute value for USER_LAST_NAME using the alias name UserLastName.
     * @return the USER_LAST_NAME
     */
    public String getUserLastName() {
        return (String) getAttributeInternal(USERLASTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_LAST_NAME using the alias name UserLastName.
     * @param value value to set the USER_LAST_NAME
     */
    public void setUserLastName(String value) {
        setAttributeInternal(USERLASTNAME, value);
    }

    /**
     * Gets the attribute value for USER_DOB using the alias name UserDob.
     * @return the USER_DOB
     */
    public Date getUserDob() {
        return (Date) getAttributeInternal(USERDOB);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_DOB using the alias name UserDob.
     * @param value value to set the USER_DOB
     */
    public void setUserDob(Date value) {
        setAttributeInternal(USERDOB, value);
    }

    /**
     * Gets the attribute value for USER_PHONE_NO using the alias name UserPhoneNo.
     * @return the USER_PHONE_NO
     */
    public String getUserPhoneNo() {
        return (String) getAttributeInternal(USERPHONENO);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_PHONE_NO using the alias name UserPhoneNo.
     * @param value value to set the USER_PHONE_NO
     */
    public void setUserPhoneNo(String value) {
        setAttributeInternal(USERPHONENO, value);
    }

    /**
     * Gets the attribute value for USER_LANG using the alias name UserLang.
     * @return the USER_LANG
     */
    public String getUserLang() {
        return (String) getAttributeInternal(USERLANG);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_LANG using the alias name UserLang.
     * @param value value to set the USER_LANG
     */
    public void setUserLang(String value) {
        setAttributeInternal(USERLANG, value);
    }

    /**
     * Gets the attribute value for MODIFIED_BY using the alias name ModifiedBy.
     * @return the MODIFIED_BY
     */
    public String getModifiedBy() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for MODIFIED_BY using the alias name ModifiedBy.
     * @param value value to set the MODIFIED_BY
     */
    public void setModifiedBy(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for MODIFIED_DATE using the alias name ModifiedDate.
     * @return the MODIFIED_DATE
     */
    public Timestamp getModifiedDate() {
        return (Timestamp) getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for MODIFIED_DATE using the alias name ModifiedDate.
     * @param value value to set the MODIFIED_DATE
     */
    public void setModifiedDate(Timestamp value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * Gets the attribute value for USER_SHORTNAME using the alias name UserShortname.
     * @return the USER_SHORTNAME
     */
    public String getUserShortname() {
        return (String) getAttributeInternal(USERSHORTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_SHORTNAME using the alias name UserShortname.
     * @param value value to set the USER_SHORTNAME
     */
    public void setUserShortname(String value) {
        setAttributeInternal(USERSHORTNAME, value);
    }

    /**
     * Gets the attribute value for USER_STATUS using the alias name UserStatus.
     * @return the USER_STATUS
     */
    public String getUserStatus() {
        return (String) getAttributeInternal(USERSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_STATUS using the alias name UserStatus.
     * @param value value to set the USER_STATUS
     */
    public void setUserStatus(String value) {
        setAttributeInternal(USERSTATUS, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link PrtCardUserRoleMappingVO.
     */
    public RowIterator getPrtCardUserRoleMappingVO() {
        return (RowIterator)getAttributeInternal(PRTCARDUSERROLEMAPPINGVO);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
