package com.sfr.engage.model.entities;

import java.math.BigDecimal;

import java.sql.Date;
import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Mar 25 16:42:56 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PrtPcmFeedsEOImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        PrtPcmFeedsPk {
            public Object get(PrtPcmFeedsEOImpl obj) {
                return obj.getPrtPcmFeedsPk();
            }

            public void put(PrtPcmFeedsEOImpl obj, Object value) {
                obj.setPrtPcmFeedsPk((BigDecimal)value);
            }
        }
        ,
        CustomerType {
            public Object get(PrtPcmFeedsEOImpl obj) {
                return obj.getCustomerType();
            }

            public void put(PrtPcmFeedsEOImpl obj, Object value) {
                obj.setCustomerType((String)value);
            }
        }
        ,
        InformationType {
            public Object get(PrtPcmFeedsEOImpl obj) {
                return obj.getInformationType();
            }

            public void put(PrtPcmFeedsEOImpl obj, Object value) {
                obj.setInformationType((String)value);
            }
        }
        ,
        PromotionCheck {
            public Object get(PrtPcmFeedsEOImpl obj) {
                return obj.getPromotionCheck();
            }

            public void put(PrtPcmFeedsEOImpl obj, Object value) {
                obj.setPromotionCheck((String)value);
            }
        }
        ,
        EffectiveDate {
            public Object get(PrtPcmFeedsEOImpl obj) {
                return obj.getEffectiveDate();
            }

            public void put(PrtPcmFeedsEOImpl obj, Object value) {
                obj.setEffectiveDate((Date)value);
            }
        }
        ,
        EndDate {
            public Object get(PrtPcmFeedsEOImpl obj) {
                return obj.getEndDate();
            }

            public void put(PrtPcmFeedsEOImpl obj, Object value) {
                obj.setEndDate((Date)value);
            }
        }
        ,
        MessageLang {
            public Object get(PrtPcmFeedsEOImpl obj) {
                return obj.getMessageLang();
            }

            public void put(PrtPcmFeedsEOImpl obj, Object value) {
                obj.setMessageLang((String)value);
            }
        }
        ,
        MessageEnglish {
            public Object get(PrtPcmFeedsEOImpl obj) {
                return obj.getMessageEnglish();
            }

            public void put(PrtPcmFeedsEOImpl obj, Object value) {
                obj.setMessageEnglish((String)value);
            }
        }
        ,
        CountryCode {
            public Object get(PrtPcmFeedsEOImpl obj) {
                return obj.getCountryCode();
            }

            public void put(PrtPcmFeedsEOImpl obj, Object value) {
                obj.setCountryCode((String)value);
            }
        }
        ,
        ModifiedBy {
            public Object get(PrtPcmFeedsEOImpl obj) {
                return obj.getModifiedBy();
            }

            public void put(PrtPcmFeedsEOImpl obj, Object value) {
                obj.setModifiedBy((String)value);
            }
        }
        ,
        ModifiedDate {
            public Object get(PrtPcmFeedsEOImpl obj) {
                return obj.getModifiedDate();
            }

            public void put(PrtPcmFeedsEOImpl obj, Object value) {
                obj.setModifiedDate((Timestamp)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(PrtPcmFeedsEOImpl object);

        public abstract void put(PrtPcmFeedsEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int PRTPCMFEEDSPK = AttributesEnum.PrtPcmFeedsPk.index();
    public static final int CUSTOMERTYPE = AttributesEnum.CustomerType.index();
    public static final int INFORMATIONTYPE = AttributesEnum.InformationType.index();
    public static final int PROMOTIONCHECK = AttributesEnum.PromotionCheck.index();
    public static final int EFFECTIVEDATE = AttributesEnum.EffectiveDate.index();
    public static final int ENDDATE = AttributesEnum.EndDate.index();
    public static final int MESSAGELANG = AttributesEnum.MessageLang.index();
    public static final int MESSAGEENGLISH = AttributesEnum.MessageEnglish.index();
    public static final int COUNTRYCODE = AttributesEnum.CountryCode.index();
    public static final int MODIFIEDBY = AttributesEnum.ModifiedBy.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PrtPcmFeedsEOImpl() {
    }

    /**
     * Gets the attribute value for PrtPcmFeedsPk, using the alias name PrtPcmFeedsPk.
     * @return the PrtPcmFeedsPk
     */
    public BigDecimal getPrtPcmFeedsPk() {
        return (BigDecimal)getAttributeInternal(PRTPCMFEEDSPK);
    }

    /**
     * Sets <code>value</code> as the attribute value for PrtPcmFeedsPk.
     * @param value value to set the PrtPcmFeedsPk
     */
    public void setPrtPcmFeedsPk(BigDecimal value) {
        setAttributeInternal(PRTPCMFEEDSPK, value);
    }

    /**
     * Gets the attribute value for CustomerType, using the alias name CustomerType.
     * @return the CustomerType
     */
    public String getCustomerType() {
        return (String)getAttributeInternal(CUSTOMERTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CustomerType.
     * @param value value to set the CustomerType
     */
    public void setCustomerType(String value) {
        setAttributeInternal(CUSTOMERTYPE, value);
    }

    /**
     * Gets the attribute value for InformationType, using the alias name InformationType.
     * @return the InformationType
     */
    public String getInformationType() {
        return (String)getAttributeInternal(INFORMATIONTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for InformationType.
     * @param value value to set the InformationType
     */
    public void setInformationType(String value) {
        setAttributeInternal(INFORMATIONTYPE, value);
    }

    /**
     * Gets the attribute value for PromotionCheck, using the alias name PromotionCheck.
     * @return the PromotionCheck
     */
    public String getPromotionCheck() {
        return (String)getAttributeInternal(PROMOTIONCHECK);
    }

    /**
     * Sets <code>value</code> as the attribute value for PromotionCheck.
     * @param value value to set the PromotionCheck
     */
    public void setPromotionCheck(String value) {
        setAttributeInternal(PROMOTIONCHECK, value);
    }

    /**
     * Gets the attribute value for EffectiveDate, using the alias name EffectiveDate.
     * @return the EffectiveDate
     */
    public Date getEffectiveDate() {
        return (Date)getAttributeInternal(EFFECTIVEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EffectiveDate.
     * @param value value to set the EffectiveDate
     */
    public void setEffectiveDate(Date value) {
        setAttributeInternal(EFFECTIVEDATE, value);
    }

    /**
     * Gets the attribute value for EndDate, using the alias name EndDate.
     * @return the EndDate
     */
    public Date getEndDate() {
        return (Date)getAttributeInternal(ENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndDate.
     * @param value value to set the EndDate
     */
    public void setEndDate(Date value) {
        setAttributeInternal(ENDDATE, value);
    }

    /**
     * Gets the attribute value for MessageLang, using the alias name MessageLang.
     * @return the MessageLang
     */
    public String getMessageLang() {
        return (String)getAttributeInternal(MESSAGELANG);
    }

    /**
     * Sets <code>value</code> as the attribute value for MessageLang.
     * @param value value to set the MessageLang
     */
    public void setMessageLang(String value) {
        setAttributeInternal(MESSAGELANG, value);
    }

    /**
     * Gets the attribute value for MessageEnglish, using the alias name MessageEnglish.
     * @return the MessageEnglish
     */
    public String getMessageEnglish() {
        return (String)getAttributeInternal(MESSAGEENGLISH);
    }

    /**
     * Sets <code>value</code> as the attribute value for MessageEnglish.
     * @param value value to set the MessageEnglish
     */
    public void setMessageEnglish(String value) {
        setAttributeInternal(MESSAGEENGLISH, value);
    }

    /**
     * Gets the attribute value for CountryCode, using the alias name CountryCode.
     * @return the CountryCode
     */
    public String getCountryCode() {
        return (String)getAttributeInternal(COUNTRYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CountryCode.
     * @param value value to set the CountryCode
     */
    public void setCountryCode(String value) {
        setAttributeInternal(COUNTRYCODE, value);
    }

    /**
     * Gets the attribute value for ModifiedBy, using the alias name ModifiedBy.
     * @return the ModifiedBy
     */
    public String getModifiedBy() {
        return (String)getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedBy.
     * @param value value to set the ModifiedBy
     */
    public void setModifiedBy(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for ModifiedDate, using the alias name ModifiedDate.
     * @return the ModifiedDate
     */
    public Timestamp getModifiedDate() {
        return (Timestamp)getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ModifiedDate.
     * @param value value to set the ModifiedDate
     */
    public void setModifiedDate(Timestamp value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param prtPcmFeedsPk key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal prtPcmFeedsPk) {
        return new Key(new Object[]{prtPcmFeedsPk});
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("com.sfr.engage.model.entities.PrtPcmFeedsEO");
        }
        return mDefinitionObject;
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
