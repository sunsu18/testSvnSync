package com.sfr.engage.model.queries.rvo;

import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Mar 06 19:55:11 IST 2014
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PrtGenStringRVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(PrtGenStringRVORowImpl obj) {
                return obj.getId();
            }

            public void put(PrtGenStringRVORowImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        Type {
            public Object get(PrtGenStringRVORowImpl obj) {
                return obj.getType();
            }

            public void put(PrtGenStringRVORowImpl obj, Object value) {
                obj.setType((String)value);
            }
        }
        ,
        TypeValue {
            public Object get(PrtGenStringRVORowImpl obj) {
                return obj.getTypeValue();
            }

            public void put(PrtGenStringRVORowImpl obj, Object value) {
                obj.setTypeValue((String)value);
            }
        }
        ,
        KeyCode {
            public Object get(PrtGenStringRVORowImpl obj) {
                return obj.getKeyCode();
            }

            public void put(PrtGenStringRVORowImpl obj, Object value) {
                obj.setKeyCode((String)value);
            }
        }
        ,
        KeyValue {
            public Object get(PrtGenStringRVORowImpl obj) {
                return obj.getKeyValue();
            }

            public void put(PrtGenStringRVORowImpl obj, Object value) {
                obj.setKeyValue((String)value);
            }
        }
        ,
        LangCode {
            public Object get(PrtGenStringRVORowImpl obj) {
                return obj.getLangCode();
            }

            public void put(PrtGenStringRVORowImpl obj, Object value) {
                obj.setLangCode((String)value);
            }
        }
        ,
        ModifiedBy {
            public Object get(PrtGenStringRVORowImpl obj) {
                return obj.getModifiedBy();
            }

            public void put(PrtGenStringRVORowImpl obj, Object value) {
                obj.setModifiedBy((String)value);
            }
        }
        ,
        ModifiedDate {
            public Object get(PrtGenStringRVORowImpl obj) {
                return obj.getModifiedDate();
            }

            public void put(PrtGenStringRVORowImpl obj, Object value) {
                obj.setModifiedDate((Timestamp)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(PrtGenStringRVORowImpl object);

        public abstract void put(PrtGenStringRVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int TYPE = AttributesEnum.Type.index();
    public static final int TYPEVALUE = AttributesEnum.TypeValue.index();
    public static final int KEYCODE = AttributesEnum.KeyCode.index();
    public static final int KEYVALUE = AttributesEnum.KeyValue.index();
    public static final int LANGCODE = AttributesEnum.LangCode.index();
    public static final int MODIFIEDBY = AttributesEnum.ModifiedBy.index();
    public static final int MODIFIEDDATE = AttributesEnum.ModifiedDate.index();

    /**
     * This is the default constructor (do not remove).
     */
    public PrtGenStringRVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute Id.
     * @return the Id
     */
    public Number getId() {
        return (Number) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Id.
     * @param value value to set the  Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Type.
     * @return the Type
     */
    public String getType() {
        return (String) getAttributeInternal(TYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Type.
     * @param value value to set the  Type
     */
    public void setType(String value) {
        setAttributeInternal(TYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TypeValue.
     * @return the TypeValue
     */
    public String getTypeValue() {
        return (String) getAttributeInternal(TYPEVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TypeValue.
     * @param value value to set the  TypeValue
     */
    public void setTypeValue(String value) {
        setAttributeInternal(TYPEVALUE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute KeyCode.
     * @return the KeyCode
     */
    public String getKeyCode() {
        return (String) getAttributeInternal(KEYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute KeyCode.
     * @param value value to set the  KeyCode
     */
    public void setKeyCode(String value) {
        setAttributeInternal(KEYCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute KeyValue.
     * @return the KeyValue
     */
    public String getKeyValue() {
        return (String) getAttributeInternal(KEYVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute KeyValue.
     * @param value value to set the  KeyValue
     */
    public void setKeyValue(String value) {
        setAttributeInternal(KEYVALUE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LangCode.
     * @return the LangCode
     */
    public String getLangCode() {
        return (String) getAttributeInternal(LANGCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LangCode.
     * @param value value to set the  LangCode
     */
    public void setLangCode(String value) {
        setAttributeInternal(LANGCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ModifiedBy.
     * @return the ModifiedBy
     */
    public String getModifiedBy() {
        return (String) getAttributeInternal(MODIFIEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ModifiedBy.
     * @param value value to set the  ModifiedBy
     */
    public void setModifiedBy(String value) {
        setAttributeInternal(MODIFIEDBY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ModifiedDate.
     * @return the ModifiedDate
     */
    public Timestamp getModifiedDate() {
        return (Timestamp) getAttributeInternal(MODIFIEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ModifiedDate.
     * @param value value to set the  ModifiedDate
     */
    public void setModifiedDate(Timestamp value) {
        setAttributeInternal(MODIFIEDDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
