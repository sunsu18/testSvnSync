<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="WSDL">
      <schema location="../E005CardGroupPALStoPortalClient.wsdl"/>
      <rootElement name="invocationMsg" namespace="http://www.statoilfuelretail.com/integration/E005/E005InvocationReqMsg"/>
    </source>
    <source type="WSDL">
      <schema location="../SelectPALSDB2DBAdaptorV1.wsdl"/>
      <rootElement name="Cc072Vs1CssffoDtaCollection" namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/SelectPALSDB2DBAdaptorV1"/>
      <param name="InvokeSelectPALSDB2Adapter_OV.Cc072Vs1CssffoDtaCollection" />
    </source>
  </mapSources>
  <mapTargets>
    <target type="WSDL">
      <schema location="../MergeCardGroupPortalDatabaseAdaptorV1.wsdl"/>
      <rootElement name="PrtCardgroupCollection" namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/MergeCardGroupPortalDatabaseAdaptorV1"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 11.1.1.6.0(build 111214.0600.1553) AT [WED MAY 07 16:29:11 IST 2014]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:inp1="http://www.statoilfuelretail.com/integration/E005/E005InvocationReqMsg"
                xmlns:aia="http://www.oracle.com/XSL/Transform/java/oracle.apps.aia.core.xpath.AIAFunctions"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
                xmlns:ns1="http://xmlns.oracle.com/pcbpel/adapter/db/E005CardGroupPALStoPortalApp/E005CardGroupPALStoPortal/MergeCardGroupPortalDatabaseAdaptorV1"
                xmlns:plt="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:med="http://schemas.oracle.com/mediator/xpath"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:tns="http://oracle.com/sca/soapservice/E005CardGroupPALStoPortalApp/E005CardGroupPALStoPortal/E005CardGroupPALStoPortalClient"
                xmlns:ns0="http://xmlns.oracle.com/pcbpel/adapter/db/E005CardGroupPALStoPortalApp/E005CardGroupPALStoPortal/SelectPALSDB2DBAdaptorV1"
                xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/db/top/MergeCardGroupPortalDatabaseAdaptorV1"
                xmlns:top="http://xmlns.oracle.com/pcbpel/adapter/db/top/SelectPALSDB2DBAdaptorV1"
                xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
                exclude-result-prefixes="xsi xsl inp1 plt wsdl xsd tns ns0 top ns1 ns2 aia bpws xp20 bpel bpm ora socket mhdr oraext dvm hwf med ids xdk xref ldap">
  <xsl:param name="InvokeSelectPALSDB2Adapter_OV.Cc072Vs1CssffoDtaCollection"/>
  <xsl:template match="/">
    <ns2:PrtCardgroupCollection>
      <xsl:for-each select="$InvokeSelectPALSDB2Adapter_OV.Cc072Vs1CssffoDtaCollection/top:Cc072Vs1CssffoDtaCollection/top:Cc072Vs1CssffoDta">
        <xsl:if test='(string-length(normalize-space(top:fForholdTx)) &lt;= 45) and (((((((normalize-space(top:kontoId) != "") and (string-length(normalize-space(top:partnerId)) = 8)) and (string-length(normalize-space(/inp1:invocationMsg/inp1:CountryCode)) = 2)) and (string-length(normalize-space(top:fForholdHtp)) = 3)) and (string-length(normalize-space(top:fForholdUtp)) = 3)) and (string-length(normalize-space(top:fForholdLnr)) = 5)) and (string-length(normalize-space(top:kontoId)) = 10))'>
          <ns2:PrtCardgroup>
            <ns2:countryCode>
              <xsl:value-of select="/inp1:invocationMsg/inp1:CountryCode"/>
            </ns2:countryCode>
            <ns2:partnerId>
              <xsl:value-of select="top:partnerId"/>
            </ns2:partnerId>
            <ns2:accountId>
              <xsl:value-of select="top:kontoId"/>
            </ns2:accountId>
            <ns2:cardgroupMainType>
              <xsl:value-of select="top:fForholdHtp"/>
            </ns2:cardgroupMainType>
            <ns2:cardgroupSubType>
              <xsl:value-of select="top:fForholdUtp"/>
            </ns2:cardgroupSubType>
            <ns2:cardgroupSeq>
              <xsl:value-of select="top:fForholdLnr"/>
            </ns2:cardgroupSeq>
            <ns2:cardgroupDescription>
              <xsl:if test="top:fForholdTx/@xsi:nil">
                <xsl:attribute name="xsi:nil">
                  <xsl:value-of select="top:fForholdTx/@xsi:nil"/>
                </xsl:attribute>
              </xsl:if>
              <xsl:value-of select="top:fForholdTx"/>
            </ns2:cardgroupDescription>
            <ns2:modifiedBy>
              <xsl:value-of select="/inp1:invocationMsg/inp1:UserName"/>
            </ns2:modifiedBy>
            <ns2:modifiedDate>
              <xsl:value-of select="xp20:current-dateTime()"/>
            </ns2:modifiedDate>
          </ns2:PrtCardgroup>
        </xsl:if>
      </xsl:for-each>
    </ns2:PrtCardgroupCollection>
  </xsl:template>
</xsl:stylesheet>
