<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="WSDL">
      <schema location="../E006CardPALSToPortal.wsdl"/>
      <rootElement name="invocationMsg" namespace="http://www.statoilfuelretail.com/integration/engage/E006CardPALSToPortal/E006CardPALSToPortal/E006CardPALSToPortal"/>
    </source>
    <source type="WSDL">
      <schema location="../PALSDB2DBAdapter.wsdl"/>
      <rootElement name="Cc073Vs1CssksiDtaCollection" namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/PALSDB2DBAdapter"/>
      <param name="InvokePALSDB2DBAdapter_PALSDB2DBAdapterSelect_OutputVariable.Cc073Vs1CssksiDtaCollection" />
    </source>
  </mapSources>
  <mapTargets>
    <target type="WSDL">
      <schema location="../InsertPALSDataToTempCardPortalDBAdapter.wsdl"/>
      <rootElement name="SoaPrtCardTempCollection" namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/InsertPALSDataToTempCardPortalDBAdapter"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 11.1.1.6.0(build 111214.0600.1553) AT [THU MAY 15 17:55:15 IST 2014]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:aia="http://www.oracle.com/XSL/Transform/java/oracle.apps.aia.core.xpath.AIAFunctions"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:top="http://xmlns.oracle.com/pcbpel/adapter/db/top/PALSDB2DBAdapter"
                xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
                xmlns:tns="http://xmlns.oracle.com/pcbpel/adapter/db/E006CardPALSToPortal/E006CardPALSToPortal/PALSDB2DBAdapter"
                xmlns:ns1="http://www.statoilfuelretail.com/integration/engage"
                xmlns:plnk="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:ns0="http://xmlns.oracle.com/pcbpel/adapter/db/E006CardPALSToPortal/E006CardPALSToPortal/InsertPALSDataToTempCardPortalDBAdapter"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:med="http://schemas.oracle.com/mediator/xpath"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:bpmn="http://schemas.oracle.com/bpm/xpath"
                xmlns:ns2="http://xmlns.oracle.com/pcbpel/adapter/db/top/InsertPALSDataToTempCardPortalDBAdapter"
                xmlns:client="http://www.statoilfuelretail.com/integration/engage/E006CardPALSToPortal/E006CardPALSToPortal/E006CardPALSToPortal"
                xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
                exclude-result-prefixes="xsi xsl top tns ns1 plnk wsdl xsd client ns0 ns2 aia bpws xp20 bpel bpm ora socket mhdr oraext dvm hwf med ids xdk xref bpmn ldap">
  <xsl:param name="InvokePALSDB2DBAdapter_PALSDB2DBAdapterSelect_OutputVariable.Cc073Vs1CssksiDtaCollection"/>
  <xsl:template match="/">
    <ns2:SoaPrtCardTempCollection>
      <xsl:for-each select="$InvokePALSDB2DBAdapter_PALSDB2DBAdapterSelect_OutputVariable.Cc073Vs1CssksiDtaCollection/top:Cc073Vs1CssksiDtaCollection/top:Cc073Vs1CssksiDta">
        <xsl:if test='(((((string-length(top:partnerId) = 8.0) and (string-length(top:fForholdHtp) = 3.0)) and ((string-length(top:fForholdUtp) = 3.0) and (string-length(top:fForholdLnr) = 5.0))) and (string-length(top:kjopsalgId) = 10.0)) and ((string-length(top:bevisTp) = 3.0) and (string-length(top:pregeId) = 20.0))) and (((top:fForholdUtp != "") and (top:fForholdLnr != "")) and ((top:partnerId != "") and (top:fForholdHtp != ""))and (((top:kjopsalgId != "") and (top:bevisTp != "")) and (top:pregeId != "")))'>
          <ns2:SoaPrtCardTemp>
            <ns2:deltaTs>
              <xsl:value-of select="top:deltaTs"/>
            </ns2:deltaTs>
            <ns2:countryCode>
              <xsl:value-of select="/client:invocationMsg/client:CountryCode"/>
            </ns2:countryCode>
            <ns2:partnerId>
              <xsl:value-of select="top:partnerId"/>
            </ns2:partnerId>
            <ns2:cardgroupMainType>
              <xsl:value-of select="top:fForholdHtp"/>
            </ns2:cardgroupMainType>
            <ns2:cardgroupSubType>
              <xsl:value-of select="top:fForholdUtp"/>
            </ns2:cardgroupSubType>
            <ns2:cardgroupSeq>
              <xsl:value-of select="top:fForholdLnr"/>
            </ns2:cardgroupSeq>
            <ns2:prtCardPk>
              <xsl:value-of select="top:kjopsalgId"/>
            </ns2:prtCardPk>
            <ns2:cardIdentifier>
              <xsl:value-of select="top:kjopsalgTp"/>
            </ns2:cardIdentifier>
            <ns2:cardType>
              <xsl:value-of select="top:bevisTp"/>
            </ns2:cardType>
            <ns2:magneticCode>
              <xsl:value-of select="top:eksternId"/>
            </ns2:magneticCode>
            <ns2:cardEmbossNum>
              <xsl:value-of select="top:pregeId"/>
            </ns2:cardEmbossNum>
            <ns2:invoiceInformation>
              <xsl:value-of select="top:fakturaTx"/>
            </ns2:invoiceInformation>
            <ns2:cardExpiry>
              <xsl:value-of select="top:gyldigtomDt"/>
            </ns2:cardExpiry>
            <ns2:blockType>
              <xsl:value-of select="top:bevsperreTp"/>
            </ns2:blockType>
            <ns2:blockCode>
              <xsl:value-of select="top:bevsperreKd"/>
            </ns2:blockCode>
            <ns2:blockAction>
              <xsl:value-of select="top:bevsperreaksjon"/>
            </ns2:blockAction>
            <ns2:blockDate>
              <xsl:value-of select="top:bevsperreDt"/>
            </ns2:blockDate>
            <ns2:blockTime>
              <xsl:value-of select="top:bevsperreTid"/>
            </ns2:blockTime>
            <ns2:blockLevel>
              <xsl:value-of select="top:bevsperrenivaKd"/>
            </ns2:blockLevel>
            <ns2:manufacturedDate>
              <xsl:value-of select="top:produsertDt"/>
            </ns2:manufacturedDate>
            <ns2:routexCustomerNumber>
              <xsl:value-of select="top:rtxkndNr"/>
            </ns2:routexCustomerNumber>
            <ns2:invoiceAddr1>
              <xsl:value-of select="top:fakadresse1"/>
            </ns2:invoiceAddr1>
            <ns2:invoiceAddr2>
              <xsl:value-of select="top:fakadresse2"/>
            </ns2:invoiceAddr2>
            <ns2:invoicePostalCode>
              <xsl:value-of select="top:fakadrpostNr"/>
            </ns2:invoicePostalCode>
            <ns2:invoiceCity>
              <xsl:value-of select="top:fakadrpoststed"/>
            </ns2:invoiceCity>
            <ns2:addrSeq>
              <xsl:value-of select="top:fakadrlopeNr"/>
            </ns2:addrSeq>
            <ns2:invoiceCountry>
              <xsl:value-of select="top:fakadrlandKd"/>
            </ns2:invoiceCountry>
            <ns2:invoiceAddrLevel>
              <xsl:value-of select="top:fakadrnivaKd"/>
            </ns2:invoiceAddrLevel>
            <ns2:invoiceAddrType>
              <xsl:value-of select="top:fakadresseTp"/>
            </ns2:invoiceAddrType>
            <ns2:modifiedBy>
              <xsl:value-of select="/client:invocationMsg/client:UserName"/>
            </ns2:modifiedBy>
            <ns2:modifiedDate>
              <xsl:value-of select="xp20:current-dateTime()"/>
            </ns2:modifiedDate>
          </ns2:SoaPrtCardTemp>
        </xsl:if>
      </xsl:for-each>
    </ns2:SoaPrtCardTempCollection>
  </xsl:template>
</xsl:stylesheet>
