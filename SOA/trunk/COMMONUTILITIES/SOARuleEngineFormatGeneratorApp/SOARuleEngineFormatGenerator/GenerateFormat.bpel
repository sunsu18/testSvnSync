<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Mon Jul 28 20:05:35 IST 2014
  Author:  10602239
  Type: BPEL 2.0 Process
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="GenerateFormat"
         targetNamespace="http://www.lntinfotech.com/integration/SOARuleEngineFormatGeneratorApp/SOARuleEngineFormatGenerator/GenerateFormat"
         xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:client="http://www.lntinfotech.com/integration/SOARuleEngineFormatGeneratorApp/SOARuleEngineFormatGenerator/GenerateFormat"
         xmlns:ora="http://schemas.oracle.com/xpath/extension"
         xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns1="http://www.lntinfotech.com/integration/SOARuleEngineFormatGenerator"
         xmlns:aia="http://www.oracle.com/XSL/Transform/java/oracle.apps.aia.core.xpath.AIAFunctions"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <import namespace="http://www.lntinfotech.com/integration/SOARuleEngineFormatGeneratorApp/SOARuleEngineFormatGenerator/GenerateFormat" location="GenerateFormat.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import location="oracle.xml.parser.v2.XMLElement" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <import location="com.ExcelGenerator" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <import location="com.ExcelReportInput" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <import location="com.ExcelReportOutput" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <import location="java.util.ArrayList" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <!--    <import location="org.w3c.dom.Element" importType="http://schemas.oracle.com/bpel/extension/java"/>-->
    <import location="org.w3c.dom.Document" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <import location="org.w3c.dom.Text" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <import location="java.lang.*" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <import location="java.io.ByteArrayOutputStream" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <import location="java.io.FileOutputStream" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <import location="java.io.StringReader" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <import location="java.io.StringWriter" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <import location="javax.xml.parsers.DocumentBuilder" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <import location="javax.xml.parsers.DocumentBuilderFactory" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <import location="javax.xml.transform.Transformer" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <import location="javax.xml.transform.TransformerFactory" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <import location="javax.xml.transform.dom.DOMSource" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <import location="javax.xml.transform.stream.StreamResult" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <import location="org.apache.poi.hssf.usermodel.HSSFCellStyle" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <!--<import location="org.apache.poi.hssf.usermodel.HSSFFont" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <import location="org.apache.poi.hssf.usermodel.HSSFRow" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <import location="org.apache.poi.hssf.usermodel.HSSFSheet" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <import location="org.apache.poi.hssf.usermodel.HSSFWorkbook" importType="http://schemas.oracle.com/bpel/extension/java"/>
-->    <import location="org.w3c.dom.Document" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <import location="org.w3c.dom.Node" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <import location="org.w3c.dom.NodeList" importType="http://schemas.oracle.com/bpel/extension/java"/>
    <import location="org.xml.sax.InputSource" importType="http://schemas.oracle.com/bpel/extension/java"/>
    
    <!-- 
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        PARTNERLINKS                                                      
        List of services participating in this BPEL process               
      ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    -->
    <partnerLinks>
        <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
        <partnerLink name="generateformat_client"
                     partnerLinkType="client:GenerateFormat"
                     myRole="GenerateFormatProvider"/>
    </partnerLinks>
    <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
    <variables>
        <!-- Reference to the message passed as input during initiation -->
        <variable name="inputVariable"
                  messageType="client:GenerateFormatRequestMessage"/>
        <!-- Reference to the message that will be returned to the requester-->
        <variable name="outputVariable"
                  messageType="client:GenerateFormatResponseMessage"/>
    </variables>
    <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
    <sequence name="main">
        <!-- Receive input from requestor. (Note: This maps to operation defined in GenerateFormat.wsdl) -->
        <receive name="receiveInput" partnerLink="generateformat_client"
                 portType="client:GenerateFormat" operation="process"
                 variable="inputVariable" createInstance="yes"/>
        <assign name="AssignRuleData">
            <copy>
                <from>$inputVariable.payload/ns1:RuleID</from>
                <to>$outputVariable.payload/ns1:RuleID</to>
            </copy>
            <copy>
                <from>$inputVariable.payload/ns1:SubscriptionID</from>
                <to>$outputVariable.payload/ns1:SubscriptionID</to>
            </copy>
        </assign>
        <scope name="Scope1">
            <variables>
                <variable name="encodedReportData" type="xsd:string"/>
                <variable name="encodedExcelFormatData"
                          type="xsd:base64Binary"/>
            </variables>
            <faultHandlers>
                <catchAll>
                    <assign name="AssignFaultData">
                        <copy>
                            <from>ora:getFaultAsString()</from>
                            <to>$outputVariable.payload/ns1:RuleID</to>
                        </copy>
                    </assign>
                </catchAll>
            </faultHandlers>
            <sequence name="Sequence1">
                <assign name="AssignInputReporttData">
                    <copy>
                        <from>$inputVariable.payload/ns1:ReportData</from>
                        <to>$encodedExcelFormatData</to>
                    </copy>
                </assign>
                <extensionActivity>
                    <bpelx:exec name="Java_Embedding" language="java">
                        <![CDATA[/*Write your java code below e.g.             
	System.out.println("Hello, World");            
*/            
try {            
            
//XMLElement input = (XMLElement) getVariableData("inputVariable","payload","/ns1:ReportData");      
        
//oracle.xml.parser.v2.XMLElement input = (oracle.xml.parser.v2.XMLElement) getVariableData("inputVariable","payload","/ns1:ReportData");        
//oracle.xml.parser.v2.XMLElement input = (oracle.xml.parser.v2.XMLElement) getVariableData("encodedExcelFormatData");        
        
//String RD = (String) (oracle.xml.parser.v2.XMLNode)((getVariableData("inputVariable","payload","/ns1:ReportData")));        
//input.setCountry((String)(((oracle.xml.parser.v2.XMLNode)getVariableData("transactionReportInput","/ns1:TransactionReportInput/Country")).getText()));            
String input = getVariableData("encodedExcelFormatData").toString();      
byte[] inputdata = (input.toString()).getBytes();     
//String RD = input.getTextContent();        
ExcelReportInput tip = new ExcelReportInput();            
ExcelGenerator tr = new ExcelGenerator();         
tip.setRD(input.toString());    
tr.setRD(input.toString());    
tr.setAb(inputdata);    
//tip.setRD((String)((oracle.xml.parser.v2.XMLNode)((getVariableData("inputVariable","payload","/ns1:ReportData")).getText())));           
tr.generateExcel(tip);        
//setVariableData("outputVariable","payload","/ns1:ReportData", RD);        
setVariableData("encodedReportData", tr.getRD());      
    
//setVariableData("encodedReportData", input);      
}           
catch (Exception e)           
{            
//oracle.xml.parser.v2.XMLElement input = (oracle.xml.parser.v2.XMLElement) getVariableData("inputVariable","payload","/ns1:ReportData");        
//String RD = input.getTextContent();        
//String input = getVariableData("encodedExcelFormatData").toString();        
//setVariableData("outputVariable","payload","/ns1:RuleID", e.getMessage());        
//-setVariableData("outputVariable","payload","/ns1:SubscriptionID", input);        
System.out.println("Exception :" + e.getMessage());      
addAuditTrailEntry(e);            
}]]>
                    </bpelx:exec>
                </extensionActivity>
                <assign name="AssignResults">
                    <copy>
                        <from>$encodedReportData</from>
                        <to>$outputVariable.payload/ns1:ReportData</to>
                    </copy>
                    <copy>
                        <from>$encodedReportData</from>
                        <to>$outputVariable.payload/ns1:SubscriptionID</to>
                    </copy>
                </assign>
            </sequence>
        </scope>
        <!-- Generate reply to synchronous request -->
        <reply name="replyOutput" partnerLink="generateformat_client"
               portType="client:GenerateFormat" operation="process"
               variable="outputVariable"/>
    </sequence>
</process>