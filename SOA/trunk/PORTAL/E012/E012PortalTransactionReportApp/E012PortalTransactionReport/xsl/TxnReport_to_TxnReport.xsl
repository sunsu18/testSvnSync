<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper
  <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="WSDL">
      <schema location="../GenerateTransactionReport.wsdl"/>
      <rootElement name="TransactionReport" namespace="http://www.statoilfuelretail.com/integration/engage/E012PortalTransactionReportABO"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="WSDL">
      <schema location="../GenerateTransactionReport.wsdl"/>
      <rootElement name="TransactionReportResponse" namespace="http://www.statoilfuelretail.com/integration/engage/E012PortalTransactionReportABO"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 11.1.1.6.0(build 111214.0600.1553) AT [WED JUL 30 20:10:01 IST 2014]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:med="http://schemas.oracle.com/mediator/xpath"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
                xmlns:client="http://xmlns.oracle.com/E012PortalTransactionReportApp/E012PortalTransactionReport/GenerateTransactionReport"
                xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:plnk="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:ns1="http://www.statoilfuelretail.com/integration/engage/E012PortalTransactionReportABO"
                xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
                exclude-result-prefixes="xsi xsl client plnk xsd wsdl ns1 bpws xp20 mhdr bpel oraext dvm hwf med ids bpm xdk xref ora socket ldap">
  <xsl:template match="/">
    <ns1:TransactionReportResponse>
      <xsl:for-each select="/ns1:TransactionReport/Transaction">
        <TransactionData>
          <Date>
            <xsl:value-of select="TRANSACTION_TIME"/>
          </Date>
          <Account>
            <xsl:value-of select="ACCOUNT_ID"/>
          </Account>
          <CardGroup>
            <xsl:value-of select="concat(CARDGROUP_MAIN_TYPE,CARDGROUP_SUB_TYPE,CARDGROUP_SEQ)"/>
          </CardGroup>
          <Card>
            <xsl:value-of select="CARD_1_ID"/>
          </Card>
          <CardTextLine2>
            <xsl:value-of select="KSID"/>
          </CardTextLine2>
          <VehicleNo>
            <xsl:value-of select="VEHICLE_NUMBER"/>
          </VehicleNo>
          <InternalName>
            <xsl:value-of select="INTERNAL_NAME"/>
          </InternalName>
          <DriverNumber>
            <xsl:value-of select="DRIVER_NUMBER"/>
          </DriverNumber>
          <DriverName>
            <xsl:value-of select="DRIVER_NAME"/>
          </DriverName>
          <Station>
            <xsl:value-of select="STATION_NAME"/>
          </Station>
          <Country>
            <xsl:value-of select="PALS_COUNTRY_CODE"/>
          </Country>
          <Product>
            <xsl:value-of select="PRODUCT_NAME"/>
          </Product>
          <Vol>
            <xsl:value-of select="QUANTITY"/>
          </Vol>
          <UnitOfMeasure>
            <xsl:value-of select="UNIT_OF_MEASURE"/>
          </UnitOfMeasure>
          <Currency>
            <xsl:value-of select="PURCHASE_CURRENCY"/>
          </Currency>
          <ForeginUnitPrice>
            <xsl:value-of select="CURRENCY_UNIT_PRICE"/>
          </ForeginUnitPrice>
          <ForeginGrossAmount>
            <xsl:value-of select="CURRENCY_GROSS_AMOUNT"/>
          </ForeginGrossAmount>
          <DiscountedPrice>
            <xsl:value-of select="INVOICED_UNIT_PRICE_REBATED"/>
          </DiscountedPrice>
          <TotalAmount>
            <xsl:value-of select="CURRENCY_GROSS_AMOUNT_REBATED"/>
          </TotalAmount>
          <Vat>
            <xsl:value-of select="INVOIVED_VAT_REBATED"/>
          </Vat>
          <Net>
            <xsl:value-of select="INVOICED_NET_AMOUNT_REBATED"/>
          </Net>
          <xsl:choose>
            <xsl:when test='INVOICE_NUMBER_COLLECTIVE != ""'>
              <InvoiceNo>
                <xsl:value-of select="INVOICE_NUMBER_COLLECTIVE"/>
              </InvoiceNo>
            </xsl:when>
            <xsl:otherwise>
              <InvoiceNo>
                <xsl:value-of select="INVOICE_NUMBER_NON_COLLECTIVE"/>
              </InvoiceNo>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:choose>
            <xsl:when test='ODOMETER_PORTAL != ""'>
              <Odometer>
                <xsl:value-of select="number(ODOMETER_PORTAL)"/>
              </Odometer>
            </xsl:when>
            <xsl:otherwise>
              <Odometer>
                <xsl:value-of select="number(ODOMETER)"/>
              </Odometer>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:variable name="varTotalKM">
            <xsl:choose>
              <xsl:when test='ODOMETER_PORTAL != ""'>
                <xsl:value-of select="number(ODOMETER_PORTAL) - number(PREVIOUS_ODOMETER)"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="number(ODOMETER) - number(PREVIOUS_ODOMETER)"/>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:variable>
          <xsl:variable name="varTotalKMFloor">
            <xsl:choose>
              <xsl:when test="number($varTotalKM) &lt; 0 ">
                <xsl:value-of select="0"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="$varTotalKM"/>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:variable>
          <TotalKM>
            <xsl:value-of select="$varTotalKMFloor"/>
          </TotalKM>
          <!--xsl:choose>
            <xsl:when test='ODOMETER_PORTAL != ""'>
              <TotalKM>
                <xsl:value-of select="number(ODOMETER_PORTAL) - number(PREVIOUS_ODOMETER)"/>
              </TotalKM>
            </xsl:when>
            <xsl:otherwise>
              <TotalKM>
                <xsl:value-of select="number(ODOMETER) - number(PREVIOUS_ODOMETER)"/>
              </TotalKM>
            </xsl:otherwise>
          </xsl:choose-->
          <!--xsl:choose>
            <xsl:when test='ODOMETER_PORTAL != ""'>
              <xsl:choose>
                <xsl:when test='(QUANTITY != "") and (QUANTITY != "0")'>
                  <KMperL>
                    <xsl:value-of select="(number(ODOMETER_PORTAL) - number(PREVIOUS_ODOMETER)) div QUANTITY"/>
                  </KMperL>
                </xsl:when>
                <xsl:otherwise>
                  <KMperL>
                    <xsl:value-of select='"0"'/>
                  </KMperL>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
              <xsl:choose>
                <xsl:when test='(QUANTITY != "") and (QUANTITY != "0")'>
                  <KMperL>
                    <xsl:value-of select="(number(ODOMETER) - number(PREVIOUS_ODOMETER)) div QUANTITY"/>
                  </KMperL>
                </xsl:when>
                <xsl:otherwise>
                  <KMperL>
                    <xsl:value-of select='"0"'/>
                  </KMperL>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:otherwise>
          </xsl:choose-->
          <xsl:choose>
            <xsl:when test='(QUANTITY != "") and (QUANTITY != "0")'>
              <KMperL>
                <xsl:value-of select="round((number($varTotalKMFloor) div QUANTITY)*100) div 100"/>
              </KMperL>
            </xsl:when>
            <xsl:otherwise>
              <KMperL>
                <xsl:value-of select='"0"'/>
              </KMperL>
            </xsl:otherwise>
          </xsl:choose>
          <!--xsl:choose>
            <xsl:when test='ODOMETER_PORTAL != ""'>
              <xsl:choose>
                <xsl:when test='(number(ODOMETER_PORTAL) - number(PREVIOUS_ODOMETER)) != "0"'>
                  <Lper100KM>
                    <xsl:value-of select="(number(QUANTITY) div (number(ODOMETER_PORTAL) - number(PREVIOUS_ODOMETER))) * 100.0"/>
                  </Lper100KM>
                </xsl:when>
                <xsl:otherwise>
                  <Lper100KM>
                    <xsl:value-of select="0.0"/>
                  </Lper100KM>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
              <xsl:choose>
                <xsl:when test='(number(ODOMETER) - number(PREVIOUS_ODOMETER)) != "0"'>
                  <Lper100KM>
                    <xsl:value-of select="(number(QUANTITY) div (number(ODOMETER) - number(PREVIOUS_ODOMETER))) * 100.0"/>
                  </Lper100KM>
                </xsl:when>
                <xsl:otherwise>
                  <Lper100KM>
                    <xsl:value-of select="0.0"/>
                  </Lper100KM>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:otherwise>
          </xsl:choose-->
          <xsl:choose>
            <xsl:when test='(number($varTotalKMFloor) != "0") and ((QUANTITY != "") and (QUANTITY != "0"))'>
              <Lper100KM>
                <xsl:value-of select="round(((number(QUANTITY) div number($varTotalKMFloor)) * 100.0)*100) div 100"/>
              </Lper100KM>
            </xsl:when>
            <xsl:otherwise>
              <Lper100KM>
                <xsl:value-of select="0.0"/>
              </Lper100KM>
            </xsl:otherwise>
          </xsl:choose>
        </TransactionData>
      </xsl:for-each>
    </ns1:TransactionReportResponse>
  </xsl:template>
</xsl:stylesheet>
