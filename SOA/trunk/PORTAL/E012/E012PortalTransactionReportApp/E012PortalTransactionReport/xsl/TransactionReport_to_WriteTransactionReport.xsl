<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="WSDL">
      <schema location="../GenerateTransactionReport.wsdl"/>
      <rootElement name="TransactionReport" namespace="http://www.statoilfuelretail.com/integration/engage/E012PortalTransactionReportABO"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="WSDL">
      <schema location="../WriteTransactionReport.wsdl"/>
      <rootElement name="TransactionReport" namespace="http://TargetNamespace.com/WriteTransactionReport"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 11.1.1.6.0(build 111214.0600.1553) AT [MON JUL 21 14:54:11 CEST 2014]. -->
?>
<xsl:stylesheet version="1.0"
                xmlns:aia="http://www.oracle.com/XSL/Transform/java/oracle.apps.aia.core.xpath.AIAFunctions"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions"
                xmlns:client="http://xmlns.oracle.com/E012PortalTransactionReportApp/E012PortalTransactionReport/GenerateTransactionReport"
                xmlns:plnk="http://schemas.xmlsoap.org/ws/2003/05/partner-link/"
                xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:ns1="http://www.statoilfuelretail.com/integration/engage/E012PortalTransactionReportABO"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:imp1="http://TargetNamespace.com/WriteTransactionReport"
                xmlns:med="http://schemas.oracle.com/mediator/xpath"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:jca="http://xmlns.oracle.com/pcbpel/wsdl/jca/"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:tns="http://xmlns.oracle.com/pcbpel/adapter/file/E012PortalTransactionReportApp/E012PortalTransactionReport/WriteTransactionReport"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
                exclude-result-prefixes="xsi xsl client plnk wsdl ns1 xsd imp1 jca tns aia bpws xp20 bpel bpm ora socket mhdr oraext dvm hwf med ids xdk xref ldap">
  <xsl:template match="/">
    <imp1:TransactionReport>
      <imp1:TransactionData>
        <imp1:Date>
          <xsl:value-of select="'Date'"/>
        </imp1:Date>
        <imp1:Account>
          <xsl:value-of select="'Account'"/>
        </imp1:Account>
        <imp1:CardGroup>
          <xsl:value-of select="'CardGroup'"/>
        </imp1:CardGroup>
        <imp1:Card>
          <xsl:value-of select="'Card'"/>
        </imp1:Card>
        <imp1:CardTextLine2>
          <xsl:value-of select="'CardTextLine2'"/>
        </imp1:CardTextLine2>
        <imp1:VehicleNo>
          <xsl:value-of select="'VehicleNo'"/>
        </imp1:VehicleNo>
        <imp1:InternalName>
          <xsl:value-of select="'InternalName'"/>
        </imp1:InternalName>
        <imp1:DriverNumber>
          <xsl:value-of select="'DriverNumber'"/>
        </imp1:DriverNumber>
        <imp1:DriverName>
          <xsl:value-of select="'DriverName'"/>
        </imp1:DriverName>
        <imp1:Station>
          <xsl:value-of select="'Station'"/>
        </imp1:Station>
        <imp1:Country>
          <xsl:value-of select="'Country'"/>
        </imp1:Country>
        <imp1:Product>
          <xsl:value-of select="'Product'"/>
        </imp1:Product>
        <imp1:Vol>
          <xsl:value-of select="'Vol'"/>
        </imp1:Vol>
        <imp1:UnitOfMeasure>
          <xsl:value-of select="'UnitOfMeasure'"/>
        </imp1:UnitOfMeasure>
        <imp1:Currency>
          <xsl:value-of select="'Currency'"/>
        </imp1:Currency>
        <imp1:ForeginUnitPrice>
          <xsl:value-of select="'ForeginUnitPrice'"/>
        </imp1:ForeginUnitPrice>
        <imp1:ForeginGrossAmount>
          <xsl:value-of select="'ForeginGrossAmount'"/>
        </imp1:ForeginGrossAmount>
        <imp1:DiscountedPrice>
          <xsl:value-of select="'DiscountedPrice'"/>
        </imp1:DiscountedPrice>
        <imp1:TotalAmount>
          <xsl:value-of select="'TotalAmount'"/>
        </imp1:TotalAmount>
        <imp1:Vat>
          <xsl:value-of select="'Vat'"/>
        </imp1:Vat>
        <imp1:Net>
          <xsl:value-of select="'Net'"/>
        </imp1:Net>
        <imp1:InvoiceNo>
          <xsl:value-of select="'InvoiceNo'"/>
        </imp1:InvoiceNo>
        <imp1:Odometer>
          <xsl:value-of select="'Odometer'"/>
        </imp1:Odometer>
        <imp1:TotalKM>
          <xsl:value-of select="'TotalKM'"/>
        </imp1:TotalKM>
        <imp1:KMperL>
          <xsl:value-of select="'KM/L'"/>
        </imp1:KMperL>
        <imp1:Lper100KM>
          <xsl:value-of select="'L/100KM'"/>
        </imp1:Lper100KM>
      </imp1:TransactionData>
      <xsl:for-each select="/ns1:TransactionReport/Transaction">
        <imp1:TransactionData>
          <imp1:Date>
            <xsl:value-of select="TRANSACTION_TIME"/>
          </imp1:Date>
          <imp1:Account>
            <xsl:value-of select="ACCOUNT_ID"/>
          </imp1:Account>
          <imp1:CardGroup>
            <xsl:value-of select="concat(CARDGROUP_MAIN_TYPE,CARDGROUP_SUB_TYPE,CARDGROUP_SEQ)"/>
          </imp1:CardGroup>
          <imp1:Card>
            <xsl:value-of select="CARD_1_ID"/>
          </imp1:Card>
          <imp1:CardTextLine2>
            <xsl:value-of select="KSID"/>
          </imp1:CardTextLine2>
          <imp1:VehicleNo>
            <xsl:value-of select="VEHICLE_NUMBER"/>
          </imp1:VehicleNo>
          <imp1:InternalName>
            <xsl:value-of select="INTERNAL_NAME"/>
          </imp1:InternalName>
          <imp1:DriverNumber>
            <xsl:value-of select="DRIVER_NUMBER"/>
          </imp1:DriverNumber>
          <imp1:DriverName>
            <xsl:value-of select="DRIVER_NAME"/>
          </imp1:DriverName>
          <imp1:Station>
            <xsl:value-of select="STATION_NAME"/>
          </imp1:Station>
          <imp1:Country>
            <xsl:value-of select="PALS_COUNTRY_CODE"/>
          </imp1:Country>
          <imp1:Product>
            <xsl:value-of select="PRODUCT_NAME"/>
          </imp1:Product>
          <imp1:Vol>
            <xsl:value-of select="QUANTITY"/>
          </imp1:Vol>
          <imp1:UnitOfMeasure>
            <xsl:value-of select="UNIT_OF_MEASURE"/>
          </imp1:UnitOfMeasure>
          <imp1:Currency>
            <xsl:value-of select="PURCHASE_CURRENCY"/>
          </imp1:Currency>
          <imp1:ForeginUnitPrice>
            <xsl:value-of select="CURRENCY_UNIT_PRICE"/>
          </imp1:ForeginUnitPrice>
          <imp1:ForeginGrossAmount>
            <xsl:value-of select="CURRENCY_GROSS_AMOUNT"/>
          </imp1:ForeginGrossAmount>
          <imp1:DiscountedPrice>
            <xsl:value-of select="INVOICED_UNIT_PRICE_REBATED"/>
          </imp1:DiscountedPrice>
          <imp1:TotalAmount>
            <xsl:value-of select="CURRENCY_GROSS_AMOUNT_REBATED"/>
          </imp1:TotalAmount>
          <imp1:Vat>
            <xsl:value-of select="INVOIVED_VAT_REBATED"/>
          </imp1:Vat>
          <imp1:Net>
            <xsl:value-of select="INVOICED_NET_AMOUNT_REBATED"/>
          </imp1:Net>
          <xsl:choose>
            <xsl:when test='INVOICE_NUMBER_COLLECTIVE != ""'>
              <imp1:InvoiceNo>
                <xsl:value-of select="INVOICE_NUMBER_COLLECTIVE"/>
              </imp1:InvoiceNo>
            </xsl:when>
            <xsl:otherwise>
              <imp1:InvoiceNo>
                <xsl:value-of select="INVOICE_NUMBER_NON_COLLECTIVE"/>
              </imp1:InvoiceNo>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:choose>
            <xsl:when test='ODOMETER_PORTAL != ""'>
              <imp1:Odometer>
                <xsl:value-of select="ODOMETER_PORTAL"/>
              </imp1:Odometer>
            </xsl:when>
            <xsl:otherwise>
              <imp1:Odometer>
                <xsl:value-of select="ODOMETER"/>
              </imp1:Odometer>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:choose>
            <xsl:when test='ODOMETER_PORTAL != ""'>
              <imp1:TotalKM>
                <xsl:value-of select="number(ODOMETER_PORTAL) - number(PREVIOUS_ODOMETER)"/>
              </imp1:TotalKM>
            </xsl:when>
            <xsl:otherwise>
              <imp1:TotalKM>
                <xsl:value-of select="number(ODOMETER) - number(PREVIOUS_ODOMETER)"/>
              </imp1:TotalKM>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:choose>
            <xsl:when test='ODOMETER_PORTAL != ""'>
              <xsl:choose>
                <xsl:when test='QUANTITY != "0"'>
                  <imp1:KMperL>
                    <xsl:value-of select="(number(ODOMETER_PORTAL) - number(PREVIOUS_ODOMETER)) div QUANTITY"/>
                  </imp1:KMperL>
                </xsl:when>
                <xsl:otherwise>
                  <imp1:KMperL>
                    <xsl:value-of select='"0"'/>
                  </imp1:KMperL>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
              <xsl:choose>
                <xsl:when test='QUANTITY != ""'>
                  <imp1:KMperL>
                    <xsl:value-of select="(number(ODOMETER) - number(PREVIOUS_ODOMETER)) div QUANTITY"/>
                  </imp1:KMperL>
                </xsl:when>
                <xsl:otherwise>
                  <imp1:KMperL>
                    <xsl:value-of select='"0"'/>
                  </imp1:KMperL>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:choose>
            <xsl:when test="ODOMETER_PORTAL != ''">
              <xsl:choose>
                <xsl:when test="(number(ODOMETER_PORTAL) - number(PREVIOUS_ODOMETER)) != '0'">
                  <imp1:Lper100KM>
                    <xsl:value-of select="(number(QUANTITY) div (number(ODOMETER_PORTAL) - number(PREVIOUS_ODOMETER)))*100"/>
                  </imp1:Lper100KM>
                </xsl:when>
                <xsl:otherwise>
                  <imp1:Lper100KM>
                    <xsl:value-of select="0"/>
                  </imp1:Lper100KM>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
              <xsl:choose>
                <xsl:when test="(number(ODOMETER) - number(PREVIOUS_ODOMETER)) != '0'">
                  <imp1:Lper100KM>
                    <xsl:value-of select="(number(QUANTITY) div (number(ODOMETER) - number(PREVIOUS_ODOMETER)))*100"/>
                  </imp1:Lper100KM>
                </xsl:when>
                <xsl:otherwise>
                  <imp1:Lper100KM>
                    <xsl:value-of select="0"/>
                  </imp1:Lper100KM>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:otherwise>
          </xsl:choose>
        </imp1:TransactionData>
      </xsl:for-each>
    </imp1:TransactionReport>
  </xsl:template>
</xsl:stylesheet>
